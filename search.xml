<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>方舟计划</title>
    <url>/posts/55645/</url>
    <content><![CDATA[<p>互联网上曾经存在过乌拉科幻小说网，这个网站收集的科幻小说数目之多，种类之全令人叹为观止，但它几乎没有任何作品的版权，因此它的关停是命中注定的。站长知道网站最终命运，因此制定了方舟计划，定期将网站收集的全部作品打包，待网站关停后将资源流放到互联网的某个角落。我有幸得到了方舟计划的船票，于是将方舟计划的内容和船票在此留存一份。</p>
<span id="more"></span>
<div class="note info no-icon"><h4 id="诺亚方舟圣经创世记">诺亚方舟《圣经·创世记》</h4>
<p>上帝对诺亚说：你要用歌斐木造一只方舟，分一间一间的造，里外抹上松香。方舟的造法乃是这样：要长300肘，宽50肘，高30肘……你和你的全家都要进入方舟，凡洁净的畜类你要带七公七母，不洁净的畜类你要带一公一母，空中的飞鸟也要带七公七母。因为再过7天，我要在地上降雨40昼夜，把我所造的各种活物，都从地上除灭。</p>
<p>诺亚就遵循着上帝的吩咐行事了。</p>
<p>当人和各样活物都进去之后，过了7天，洪水泛滥在地上；大渊的泉源都裂开了，天上的窗户也敞开了；水势在地上极其浩大，天下的高山都淹没了。2月17日，方舟停在亚拉腊山上。</p>
</div>
<p>方舟计划是站长乌拉为了在本站或自身遭遇毁灭性破坏的情况下，将本站的火种继续保存下去而制定的一系列计划。该计划共分4种情形：</p>
<h3 id="type-a"><strong>Type A</strong></h3>
<p>当出现网站因各种原因被摧毁或面临关闭（例如因版权原因而遭到关闭或网站因资金问题无法继续存活、被智子破坏等等），而站长自身仍存在的情况下，在网站关闭之时，站长将手动发布本站所有作品的压缩包存档。</p>
<h3 id="type-b"><strong>Type B</strong></h3>
<p>当出现站长自身被摧毁或无法行动（例如站长出现意外事故或被跨省、遭遇ETO或三体人袭击等等），而网站仍存在的情况下，网站系统将在一定期限内<a
href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>，自动发布本站最近一次备份的所有作品的压缩包存档。该计划可能与Type
C共同执行，Type B共分两个阶段：</p>
<ol type="1">
<li>在距站长最近一次登录后台的20天之后，Tyep
B进入准备阶段，网站将进行提示（如为误启动，站长应尽快登录并取消）。</li>
<li>在距站长最近一次登录后台的30天之后，网站将公开方舟相关信息，Tyep
B正式执行。</li>
</ol>
<h3 id="type-c"><strong>Type C</strong></h3>
<p>当出现网站和站长双方都被摧毁的情况下，站长的邮箱会在一定期限内<a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>，将本站最近一次备份的所有作品的压缩包存档及船票（解压密码）自动发送给方舟使者（特定人员），由方舟使者（们？）将压缩包存档及船票公开。
Type C共分两个阶段：</p>
<ol type="1">
<li>在距deadline最近一次重置的30天之后，Tyep
C进入准备阶段，第1封邮件将发出（如为误启动，站长应尽快重置deadline）。</li>
<li>在距deadline最近一次重置的45天之后，第2封邮件将发出，Tyep
C正式执行。</li>
</ol>
<h3 id="type-d妄想计划"><strong>Type D</strong>（妄想计划）</h3>
<p>该计划共分2种情形： 1. Type
D-1：当出现人类文明可能被摧毁的情况下，站长会将本站所有作品编码化，刻录进镀金光盘（可长时间保存）并深埋地下，等待可能出现的后续文明发掘出来。
2. Type
D-2：当出现人类文明及地球自身可能被摧毁的情况下，站长会将本站所有作品编码化，经由超大功率无线电发射台，发送给可能存在的地外文明，将人类科幻小说的火种延续下去。</p>
<p>『乌拉科幻小说网』 网址：http://www.wulali.info/ 船票：<a
href="https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230221/sfst.zip">方舟计划存档</a></p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>具体为距站长最近一次登录后台的30天之后。<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>deadline为45天，站长会每隔15天对deadline进行重置。<a
href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>观点</category>
      </categories>
  </entry>
  <entry>
    <title>我院2022年暑期国际讲堂《心脏力学：非线形弹性理论与计算》顺利结课</title>
    <url>/posts/54536/</url>
    <content><![CDATA[<p>我是此次暑期课堂的助教，照着李卓榕老师给的模板写了此新闻稿。经此一事，我发现自己一点都不称职，事情干不好，毫无责任心。
<span id="more"></span></p>
<p>2022年6月28日-7月22日，数学与统计学院暑期国际讲堂《心脏力学：非线形弹性理论与计算》在腾讯会议上授课圆满完成。该课程由学院邀请英国格拉斯哥大学应用数学与统计学院的高昊研究员进行授课。共计十多名来自教育实验学院、数学与统计学院、计算机学院、机电学院、西工大伦敦玛丽女王大学工程学院的本科生、研究生及旁听师生参加了学习。这也是本课程连续第三年在暑期国际课堂上呈现。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302231937980.jpg"
alt="图1:课程简介" />
<figcaption aria-hidden="true">图1:课程简介</figcaption>
</figure>
<p>高昊博士，是格拉斯哥心脏协会（www.glasgowhart.org）的创始人之一，也是英国EPSRC资助的SofTMech中心（www.SofTMech.org）的关键研究员。高昊博士是计算心脏病学领域的领先研究者，特别是针对患者的多尺度物理建模有着深入的研究，并致力于将其转化应用于临床实践。他发表了80多篇经过同行评议的杂志论文以及书籍章节（谷歌引文：1500，H指数：23），目前参与了3个主要由EPSRC资助的心脏病数学建模项目，这些项目均与麻省理工学院和米兰理工大学（意大利）有相关合作。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302231937006.jpg"
alt="图2: 左心室的建模与计算" />
<figcaption aria-hidden="true">图2: 左心室的建模与计算</figcaption>
</figure>
<p>随着医疗水平和计算机技术的进步，针对个体的心脏疾病医疗技术也得到了长足的发展。心脏力学采用数学物理方法对心脏进行建模，模拟心脏在工作过程中的应力应变情况，以研究各种心脏疾病的发病机理。临床上，心脏力学可以用于病人的诊断、治疗和预后评估。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302231940495.jpg"
alt="图3: 对应变能函数的讲解" />
<figcaption aria-hidden="true">图3: 对应变能函数的讲解</figcaption>
</figure>
<p>本课程总共16个课时，高昊博士结合自己的研究经历，介绍了心脏力学在个体化医疗中的应用与前景（如图4），并且展示了其中使用的一些技术，例如从MRI图像重构心脏的几何模型，用流固耦合方法模拟血液的流动情况等，让同学们充分了解了心脏力学的应用前景。</p>
<p>通过该课程，学生们学习了张量计算这一计算力学中最基本的数学工具，通过高昊老师布置的习题，学生们掌握了张量梯度、积分、微分等相关公式的推导。随后，高昊老师向同学们详细说明了如何用张量描述物体的运动：通过引入应力张量这一概念，从另一个角度来看质量守恒、动量守恒、能量守恒等方程；针对超弹性体、本构关系描述了应力张量与物体形变之间的关系。最后高老师向大家介绍了有限元软件FEniCS的使用，通过有限元方法求解非线性弹性力学问题。尽管课程时间短、内容新、难度大，很多学生仍出色地完成了课后作业，大家拓展了认知，收获满满。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302231940958.jpg"
alt="图4: 针对个体的心脏疾病诊疗系统架构介绍" />
<figcaption aria-hidden="true">图4:
针对个体的心脏疾病诊疗系统架构介绍</figcaption>
</figure>
<p>心脏力学是一个前沿的领域，通过课程的学习，同学们都对这一领域产生了浓厚的兴趣。这门课程为学生开启了心脏力学学科的大门，开拓视野、增长见识、提高对数学、物理、计算机等领域的认知水平，有利于学生未来的职业发展。</p>
<p>文/图：马鹏飞</p>
]]></content>
      <categories>
        <category>观点</category>
      </categories>
  </entry>
  <entry>
    <title>搭建个人网站</title>
    <url>/posts/26586/</url>
    <content><![CDATA[<p>对我来说，个人网站，即使只有我自己看，我也想把它打扮得漂漂亮亮的，把自己喜欢的东西放上去。搭建个人网站需要考虑的东西还是挺多的。首先，建设和维护的成本要低，用户访问的速度要快，我的方案是使用国外免费的网站托管服务，通过国内的云服务商提供的CDN服务加速。其次，网站要简洁，可以自由地加东西。我使用过Jkeyll，但是觉得它可自由改动的地方太少了，最后选择了Hexo。Hexo有很多主题，我尝试过Stellar，但是觉得它不够简洁，最后选择了Next。最近参考了
<a href="https://pinlyu.com/posts/30/">班班</a>
的博客重新设计了自己的博客，打算写个总结。</p>
<span id="more"></span>
<h2 id="域名解析">1. 域名解析</h2>
<p>考虑到访问速度和运营成本，本站使用了
<strong>GitHub、Vercel、Cloudflare、又拍云</strong>四家公司提供的服务。GitHub存储网站的源码，Vercel提供网站托管服务，Cloudflare提供域名解析服务，又拍云提供CDN服务。</p>
<h3 id="github">1.1 GitHub</h3>
<p>创建一个名为shaoyaoqian.github.io的仓库，source分支存储网站源码，main分支存储网站的静态文件，源码通过GitHub
Action生成静态文件。</p>
<h3 id="vercel">1.2 Vercel</h3>
<ol type="1">
<li>登陆Vercel，进入控制台，点击 <a href="https://vercel.com/new">Add
new...-&gt;project</a> 创建项目</li>
<li>选择网站的代码仓库，点击import导入代码</li>
<li>配置项目，填写合适的项目名，点击Deploy部署 <img data-src="https://githubimages.pengfeima.cn/images/202302031219030.png"
alt="导入GitHub仓库" /> <img data-src="https://githubimages.pengfeima.cn/images/202302031754257.png"
alt="填写项目名" /></li>
<li>部署完成后，点击 Add Domain <img data-src="https://githubimages.pengfeima.cn/images/202302031225453.png"
alt="添加域名" /></li>
<li>填入自定义域名，点击
<code>Add</code>（此处有一个Vercel分配的默认域名：
shaoyaoqian-github-io-2enj.vercel.app，此域名可以访问网站） <img data-src="https://githubimages.pengfeima.cn/images/202302031228930.png"
alt="添加域名" /></li>
<li>添加自定义域名后，Vercel会提供一个CNAME的值 <img data-src="https://githubimages.pengfeima.cn/images/202302031232250.png"
alt="等待域名解析" /></li>
</ol>
<h3 id="cloudflare">1.3 Cloudflare</h3>
<p>在域名解析处将Vercel提供的CNAME填入。图中示例为Cloudflare提供的域名解析服务，阿里云等其他域名解析服务商的设置也是类似的。
<img data-src="https://githubimages.pengfeima.cn/images/202302031215908.png"
alt="添加域名解析" /></p>
<h3 id="又拍云">1.4 又拍云</h3>
<p>国内用户访问网站需使用国内云服务商提供的CDN加速服务，本站使用的是又拍云加速。
1. 创建CDN服务 <img data-src="https://githubimages.pengfeima.cn/images/202302031237980.png"
alt="创建CDN服务" /> 2. 修改cloufare的解析 <img data-src="https://githubimages.pengfeima.cn/images/202302031827341.png"
alt="又拍云提供的CNAME" /> <img data-src="https://githubimages.pengfeima.cn/images/202302031825498.png"
alt="修改Cloudflare的域名解析" /></p>
<h3 id="网站测速">1.5 网站测速</h3>
<ol type="1">
<li>lighthouse <pre class="language-bash" data-language="bash"><code class="language-bash">lighthouse https://www.example.com <span class="token parameter variable">--view</span></code></pre></li>
<li>https://www.itdog.cn/http/</li>
</ol>
<h2 id="hexo">2. Hexo</h2>
<h3 id="环境配置">2.1 环境配置</h3>
<div class="note info"><h4 id="提示">提示</h4>
<p><code>npm</code>需要配置国内源</p>
</div>
<p>要使用 Hexo NexT 主题的博客，需要先安装 <a
href="http://nodejs.org/">Node.js</a> 和 <a
href="https://git-scm.com/downloads">Git</a>。在MacOS中可以通过homebrew安装</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">npm</span></code></pre>
<p>安装完成后，修改软件源，然后再在终端中输入命令安装 Hexo：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli</code></pre>
<p>安装 Hexo 完成后，执行下列命令会在指定文件夹中新建所需要的文件：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在指定文件夹中初始化 Hexo</span>
hexo init <span class="token operator">&lt;</span>folder-path<span class="token operator">></span>

<span class="token comment"># 定位到 Hexo 博客目录</span>
<span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder-path<span class="token operator">></span>

<span class="token comment"># 安装依赖包</span>
<span class="token function">npm</span> <span class="token function">install</span></code></pre>
<p>新建完成后，指定文件夹的目录中：</p>
<ul>
<li><code>_config.yml</code> 站点配置文件，具体配置的说明可以查看相关 <a
href="https://hexo.io/zh-cn/docs/configuration.html">文档</a>。</li>
<li><code>source</code> 文件夹是存放用户资源的地方，Markdown 和 HTML
文件会被解析并放到 <code>public</code>
文件夹，而其他文件会被复制过去（如 <code>CNAME</code> 文件）。</li>
</ul>
<h3 id="新建文章与页面">2.2 新建文章与页面</h3>
<p>使用以下第一句可以在 <code>source/_post/</code>
文件夹下新建一篇文章；使用以下的第二句可以在 <code>source</code>
下新建以 <code>&lt;page-title&gt;</code> 为名称的文件夹，文件夹内的
<code>index.md</code> 可以在编译后生成一个新的页面。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 新建文章</span>
hexo new <span class="token string">"&lt;post-title>"</span>

<span class="token comment"># 新建页面</span>
hexo new page <span class="token string">"&lt;page-title>"</span></code></pre>
<p>因为原始的都是 Markdown 文件，要让浏览器可以显示美观的网页，需要根据
Markdown 文件生成 HTML 静态文件。执行以下命令：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成静态文件，或者 hexo g</span>
hexo generate</code></pre>
<p>在某些情况，如果发现对站点的更改无论如何也不生效，可能需要运行该命令，清除缓存文件
<code>db.json</code> 和已生成的静态文件 <code>/public/</code>。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">hexo clean</code></pre>
<h3 id="本地预览调试与部署网站">2.3 本地预览调试与部署网站</h3>
<p>要在本地预览调试生成的博客网页效果，可以执行以下命令。访问网址为：<code>http://localhost:4000/</code>。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">hexo serve</code></pre>
<p>如果是部署在 GitHub
Pages，可以按照下述命令配置站点配置文件（注意缩进保持一致）：</p>
<pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span>
<span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git
    <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/&lt;github<span class="token punctuation">-</span>username<span class="token punctuation">></span>/&lt;github<span class="token punctuation">-</span>repo<span class="token punctuation">-</span>name<span class="token punctuation">></span>.git
    <span class="token key atrule">branch</span><span class="token punctuation">:</span> &lt;github<span class="token punctuation">-</span>repo<span class="token punctuation">-</span>branch<span class="token punctuation">></span></code></pre>
<p>设置完成后，执行以下命令。第一次执行过程中会提示输入相应用户名和密码，正确输入后既可以正常部署。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 首次部署要先执行以下命令安装插件</span>
<span class="token function">npm</span> i hexo-deployer-git <span class="token parameter variable">--save</span>

<span class="token comment"># 部署网站</span>
hexo deploy</code></pre>
<p>在两条命令直接采用 <code>&amp;&amp;</code>
进行连接即可同时执行两条命令。另外，使用以下的命令可以简化命令的使用：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动服务器之前预先生成静态文件，等价于 hexo g &amp;&amp; hexo s</span>
hexo s <span class="token parameter variable">-g</span>

<span class="token comment"># 静态文件生成后立即部署网站，等价于 hexo g &amp;&amp; hexo d</span>
hexo g <span class="token parameter variable">-d</span></code></pre>
<h3 id="github-actions自动部署todo">2.4 GitHub
Actions自动部署（TODO）</h3>
<ol type="1">
<li>添加密钥</li>
<li>修改<code>main.yml</code>文件</li>
</ol>
<h2 id="博客主题自定义">3. 博客主题自定义</h2>
<h3 id="修改主题">3.1 修改主题</h3>
<p>执行以下命令安装主题。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-theme-next <span class="token parameter variable">--save</span></code></pre>
<p>主题安装后，打开博客根目录下的站点配置文件（<code>/_config.yml</code>），找到
<code>theme</code> 键值，将值修改为 <code>next</code> 。</p>
<h3 id="页面">3.3 404页面</h3>
<p>要生成一个和主题样式一致的404页面，首先需要新建一个页面：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>blog-path<span class="token operator">></span>
hexo new page <span class="token string">"404"</span></code></pre>
<p>编辑该页面的 Markdown 文件为以下内容，正文部分可以自行编辑内容。其中
<code>permalink: /404</code> 表示将该文件解析生成的 HTML
文件永久链接设置为
<code>/404</code>，这样就可以让访客访问错误链接时看到这个页面了。</p>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 404 Not Found
<span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">permalink</span><span class="token punctuation">:</span> /404</span>
<span class="token punctuation">---</span></span></code></pre>
<h3 id="文章永久链接">3.4 文章永久链接</h3>
<p>这里使用插件 <code>hexo-abbrlink</code>
来生成博客文章的永久链接，可以查看该插件的 <a
href="https://github.com/Rozbo/hexo-abbrlink">GitHub 项目页面</a>。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>blog-path<span class="token operator">></span>
<span class="token function">npm</span> i hexo-abbrlink</code></pre>
<p>在站点配置文件中修改 <code>permalink</code>：</p>
<pre class="language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> permalink: :year/:month/:day/:title/
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> permalink: posts/:abbrlink/
</span><span class="token prefix inserted">+</span><span class="token line"> abbrlink:
</span><span class="token prefix inserted">+</span><span class="token line">   alg: crc32  #support crc16(default) and crc32
</span><span class="token prefix inserted">+</span><span class="token line">   rep: hex    #support dec(default) and hex</span></span></code></pre>
<h3 id="文章置顶">3.5 文章置顶</h3>
<p>首先替换给文章排序索引的原有插件
<code>hexo-generator-index</code>，执行以下命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uni hexo-generator-index <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> i hexo-generator-indexed</code></pre>
<p>然后在需要置顶的文章的开头添加 <code>sticky: true</code>
控制文章置顶：</p>
<h3 id="waline评论废弃">3.6 Waline评论（废弃）</h3>
<ol type="1">
<li><a
href="https://blog.csdn.net/litble/article/details/127049181">自建mysql数据库并开放端口</a>
<div class="note info"><h4 id="测试数据库连接">测试数据库连接</h4>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql
<span class="token comment"># 打开数据库连接</span>
db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'x.x.x.x'</span><span class="token punctuation">,</span>
                     user<span class="token operator">=</span><span class="token string">'debian-sys-maint'</span><span class="token punctuation">,</span>
                     port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span>
                     password<span class="token operator">=</span><span class="token string">'xxxxxxxxx'</span><span class="token punctuation">,</span>
                     database<span class="token operator">=</span><span class="token string">'waline'</span><span class="token punctuation">)</span>

<span class="token comment"># 使用 cursor() 方法创建一个游标对象 cursor</span>
cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 使用 execute()  方法执行 SQL 查询，获取数据库版本</span>
cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT VERSION()"</span><span class="token punctuation">)</span>
<span class="token comment"># 使用 fetchone() 方法获取单条数据.</span>
data <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token comment"># 关闭不使用的游标对象</span>
cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 关闭数据库连接</span>
db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
</div></li>
<li>docker 后端</li>
<li><a
href="https://github.com/NginxProxyManager/nginx-proxy-manager">Nginx
管理器</a> <img data-src="https://githubimages.pengfeima.cn/images/202302041235461.png"
alt="Nginx 管理器" /></li>
<li>使用img.ink图床，开启评论区图片上传</li>
<li>文章列表显示文章阅读量和评论数量</li>
</ol>
<h3 id="artalk评论todo">3.7 Artalk评论(TODO)</h3>
<h3 id="相册">3.8 相册</h3>
<p>Facybox 和 Justified Gallery</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202211291217546.jpg"
alt="冬天的绣球花" />
<figcaption aria-hidden="true">冬天的绣球花</figcaption>
</figure>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291216879.jpg"
alt="这是一段很长很长的文字" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217546.jpg"
alt="3711669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217893.jpg"
alt="3701669695359_.pic" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217240.jpg"
alt="3691669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291216884.jpg"
alt="3681669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291216894.jpg"
alt="3671669695359_.pic" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217904.jpg"
alt="3661669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217670.jpg"
alt="3651669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291216662.jpg"
alt="3641669695359_.pic" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291216722.jpg"
alt="3631669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217910.jpg"
alt="3621669695359_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217662.jpg"
alt="3611669695358_.pic" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217355.jpg"
alt="3601669695358_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217704.jpg"
alt="3591669695358_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217634.jpg"
alt="3581669695358_.pic" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217655.jpg"
alt="3571669695358_.pic" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202211291217112.jpg"
alt="3561669695358_.pic" /></div></div></div>
<h3 id="latex-公式">3.9 Latex 公式</h3>
<p>参考Next主题的<a
href="https://theme-next.js.org/docs/third-party-services/math-equations">文档</a>，使用Katex渲染公式。先更换markdown解释器，再修改配置文件。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> un hexo-renderer-markdown-it
<span class="token function">npm</span> i hexo-renderer-markdown-it-plus <span class="token parameter variable">--save</span></code></pre>
<pre class="language-yaml" data-language="yaml"><div class="caption"><span>_config.next.yml</span></div><code class="language-yaml"><span class="token key atrule">math</span><span class="token punctuation">:</span>
  <span class="token key atrule">every_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">katex</span><span class="token punctuation">:</span>
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">copy_tex</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre>
<h3 id="pjax">3.10 Pjax</h3>
<p>有时候页面跳转，只需刷新网页的一部分，不需要重新加载整个网页，<code>pjax</code>功能使得浏览器可以进行这样的操作。开启<code>pjax</code>功能后，自行添加的Javascript脚本需要加上<code>data-pjax</code>属性，确保页面跳转后脚本文件会重新执行。</p>
<pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">data-pjax</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<h3 id="chart.js-绘制图表临时使用">3.11 Chart.js 绘制图表(临时使用)</h3>
借助 <a href="https://www.chartjs.org/docs/latest/">Chart.js</a>
实现强大的图表绘制功能。目前可以在文章中加入<code>div</code>块，根据<code>div</code>块的id修改<code>main.js</code>中的相应代码来实现图表绘制的功能。
<pre class="language-none"><code class="language-none">&lt;div&gt;
  &lt;canvas id&#x3D;&quot;myChart&quot;&gt;&lt;&#x2F;canvas&gt;
&lt;&#x2F;div&gt;</code></pre>
<div>
<canvas id="myChart">
</canvas>
</div>
<h3 id="地图插件">3.12 地图插件</h3>
<p>(尚未实现) https://jvectormap.com/tutorials/getting-started/</p>
<h2 id="markdown-参考">4. MarkDown 参考</h2>
<h3 id="上下标">4.1 上下标</h3>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">19^th^
H<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span>O</code></pre>
<p>19<sup>th</sup> H<sub>2</sub>O</p>
<h3 id="下划线插入">4.2 下划线/插入</h3>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">++Inserted text++</code></pre>
<p>++Inserted text++</p>
<h3 id="段首空两格">4.3 段首空两格</h3>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment">&lt;!-- 段首空两格 --></span>&#123;% indent %&#125; </code></pre>
<h3 id="脚注">4.4 脚注</h3>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">Footnote 1 link[^firstaa].

Footnote 2 link[^second].

Inline footnote^[Text of inline footnote] definition.

Duplicated footnote reference[^second].

<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^firstaa</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Footnote</span> <span class="token bold"><span class="token punctuation">**</span><span class="token content">can have markup</span><span class="token punctuation">**</span></span>

<span class="token code keyword">    and multiple paragraphs.</span>

<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^second</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Footnote</span> text.</code></pre>
<p>Footnote 1 link<a href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>.</p>
<p>Footnote 2 link<a href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>.</p>
<p>Inline footnote<a href="#fn3" class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a> definition.</p>
<p>Duplicated footnote reference<a href="#fn4" class="footnote-ref"
id="fnref4" role="doc-noteref"><sup>4</sup></a>.</p>
<h2 id="提示卡片">5. 提示卡片</h2>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note %&#125;
<span class="token title important"><span class="token punctuation">####</span> Header</span>
(without define class style)
&#123;% endnote %&#125;</code></pre>
<div class="note "><h4 id="header">Header</h4>
<p>(without define class style)</p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note default %&#125;
<span class="token title important"><span class="token punctuation">####</span> Default Header</span>
Welcome to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note default"><h4 id="default-header">Default Header</h4>
<p>Welcome to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note primary %&#125;
<span class="token title important"><span class="token punctuation">####</span> Primary Header</span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Welcome</span><span class="token punctuation">**</span></span> to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note primary"><h4 id="primary-header">Primary Header</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note info %&#125;
<span class="token title important"><span class="token punctuation">####</span> Info Header</span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Welcome</span><span class="token punctuation">**</span></span> to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note info"><h4 id="info-header">Info Header</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note success %&#125;
<span class="token title important"><span class="token punctuation">####</span> Success Header</span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Welcome</span><span class="token punctuation">**</span></span> to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note success"><h4 id="success-header">Success Header</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note warning %&#125;
<span class="token title important"><span class="token punctuation">####</span> Warning Header</span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Welcome</span><span class="token punctuation">**</span></span> to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note warning"><h4 id="warning-header">Warning Header</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note danger %&#125;
<span class="token title important"><span class="token punctuation">####</span> Danger Header</span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Welcome</span><span class="token punctuation">**</span></span> to <span class="token url">[<span class="token content">Hexo!</span>](<span class="token url">https://hexo.io</span>)</span>
&#123;% endnote %&#125;</code></pre>
<div class="note danger"><h4 id="danger-header">Danger Header</h4>
<p><strong>Welcome</strong> to <a href="https://hexo.io">Hexo!</a></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note info no-icon %&#125;
<span class="token title important"><span class="token punctuation">####</span> No icon note</span>
Note <span class="token bold"><span class="token punctuation">**</span><span class="token content">without</span><span class="token punctuation">**</span></span> icon: <span class="token code-snippet code keyword">`note info no-icon`</span>
&#123;% endnote %&#125;</code></pre>
<div class="note info no-icon"><h4 id="no-icon-note">No icon note</h4>
<p>Note <strong>without</strong> icon:
<code>note info no-icon</code></p>
</div>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note primary This is a summary %&#125;
<span class="token title important"><span class="token punctuation">####</span> Details and summary</span>
Note with summary: <span class="token code-snippet code keyword">`note primary This is a summary`</span>
&#123;% endnote %&#125;</code></pre>
<details class="note primary"><summary><p>This is a summary</p>
</summary>
<h4 id="details-and-summary">Details and summary</h4>
<p>Note with summary: <code>note primary This is a summary</code></p>

</details>
<pre class="language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note info no-icon This is a summary %&#125;
<span class="token title important"><span class="token punctuation">####</span> Details and summary (No icon)</span>
Note with summary: <span class="token code-snippet code keyword">`note info no-icon This is a summary`</span>
&#123;% endnote %&#125;</code></pre>
<details class="note info no-icon"><summary><p>This is a summary</p>
</summary>
<h4 id="details-and-summary-no-icon">Details and summary (No icon)</h4>
<p>Note with summary:
<code>note info no-icon This is a summary</code></p>

</details>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Footnote <strong>can have markup</strong></p>
<p>and multiple paragraphs.<a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Footnote text.<a href="#fnref2" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>Text of inline footnote<a href="#fnref3"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>Footnote text.<a href="#fnref4" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>零碎笔记</title>
    <url>/posts/36605/</url>
    <content><![CDATA[<p>简单记录平时遇到的一些技术问题。 <span id="more"></span></p>
<h2 id="macos">MacOS</h2>
<h3 id="macbook-air-的公钥">MacBook Air 的公钥</h3>
<pre class="language-none"><code class="language-none">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHVXS5pIS3ETdYUF1orsd6HuFmP8kIId0kXZC&#x2F;XsighdDQFkG0iHkZZ&#x2F;HVLLN7u0cwrtx0bun8naOksoTVXZQnbVMXGalX&#x2F;zA0YzRySQzhrquHgIY0a5PKC+eZT+NOM+uN8SPZ&#x2F;nuScxfmhQjrT&#x2F;aup3ZeQoa6ThSWBcGX65V6jMgRYXdiVwRvtEE4qLdVwgk81Z7OKIlIWN98J9nYFisiim5P9Ew1WGp8ccKB44SNNJHCyc6rM2sp5JFrBhOyQ52BR7iv7Hf++Q9AKP8PXoyD4f3jEO8WJeCNkOdEw3WhNROrBMJ+C8y6K40Kl8Pzksb8+83xMpqVCuDA&#x2F;b3uFb5H1tVUjY5+xstAQjAtfsB7C1NEUA8Msh4Q1lNmDHiB3YlVfsmY5Yhpfv+JU3V+B&#x2F;7mtHXld0XF4Ac2YlAv3lgWeZpfBWagymxtL9MVjUgPTT7Dd2FBjtoHNLfFYt3r70D0fdRgtrSpIY+ppUgTGbnCz+fXCTun6jP&#x2F;Ejx+3qZS85U&#x3D; mail@pengfeima.cn</code></pre>
<h3 id="homebrew">Homebrew</h3>
<p><a
href="https://brew.sh/index_zh-cn">homebrew</a>是MacOS中的<strong>软件包的管理器</strong>，如果网络环境较好，可以通过以下代码安装。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">/bin/bash <span class="token parameter variable">-c</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="token variable">)</span></span>"</span></code></pre>
<p>安装成功后会出现提示。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302191427882.png"
alt="homebrew安装成功" />
<figcaption aria-hidden="true">homebrew安装成功</figcaption>
</figure>
<p>运行两行代码，将homebrew加入环境变量。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>echo<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">'eval "$(/opt/homebrew/bin/brew shellenv)"'</span><span class="token punctuation">)</span> <span class="token operator">>></span> /Users/pengfei/.zprofile
<span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>/opt/homebrew/bin/brew shellenv<span class="token variable">)</span></span>"</span></code></pre>
<h3 id="smartmontools">smartmontools</h3>
<p>据说，由于苹果对内存交换区使用了较为激进的策略， M1 芯片的 Macbook
硬盘写入量远大于其他电脑。安装smartmontools可以查看磁盘的状态。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> smartmontools
smartctl <span class="token parameter variable">-a</span> disk0</code></pre>
<h3 id="tensorflow">tensorflow</h3>
<p>在M1芯片的苹果电脑上安装并测试Tensorflow。 1.
直接通过pip安装tensorflow</p>
<pre class="language-python" data-language="python"><code class="language-python">pip install tensorflow<span class="token operator">-</span>macos
pip install tensorflow<span class="token operator">-</span>metal</code></pre>
<ol start="2" type="1">
<li>如果安装过程出现错误，先更新pip，再安装</li>
</ol>
<pre class="language-python" data-language="python"><code class="language-python">pip3 install <span class="token operator">-</span><span class="token operator">-</span>upgrade pip
python3 <span class="token operator">-</span>m pip install <span class="token operator">-</span><span class="token operator">-</span>upgrade setuptools</code></pre>
<ol start="3" type="1">
<li>如果<code>import tensorflow</code>出现错误，更新numpy</li>
</ol>
<pre class="language-python" data-language="python"><code class="language-python">pip install numpy <span class="token operator">-</span><span class="token operator">-</span>upgrade</code></pre>
<ol start="4" type="1">
<li>测试代码</li>
</ol>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>ops <span class="token keyword">import</span> disable_eager_execution
disable_eager_execution<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> ssl
ssl<span class="token punctuation">.</span>_create_default_https_context <span class="token operator">=</span> ssl<span class="token punctuation">.</span>_create_unverified_context

<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras

<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span> <span class="token operator">=</span> keras<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>cifar10<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
x_train<span class="token punctuation">,</span> x_test <span class="token operator">=</span> x_train <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span> x_test <span class="token operator">/</span> <span class="token number">255.0</span>

y_train <span class="token operator">=</span> keras<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>to_categorical<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> num_classes<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'float32'</span><span class="token punctuation">)</span>
y_test <span class="token operator">=</span> keras<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>to_categorical<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> num_classes<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'float32'</span><span class="token punctuation">)</span>

<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>mlcompute <span class="token keyword">import</span> mlcompute
mlcompute<span class="token punctuation">.</span>set_mlc_device<span class="token punctuation">(</span>device_name<span class="token operator">=</span><span class="token string">"gpu"</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> tf<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'/GPU:0'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    model <span class="token operator">=</span> keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'sigmoid'</span><span class="token punctuation">)</span>
                    <span class="token punctuation">]</span><span class="token punctuation">)</span>

model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token operator">=</span><span class="token string">"SGD"</span><span class="token punctuation">,</span> loss<span class="token operator">=</span><span class="token string">"categorical_crossentropy"</span><span class="token punctuation">,</span> metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'accuracy'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span> y_test<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre>
<p>可以看出M1处理器相当快。数据来自网络[^1]。 [^1]: <a
href="https://zhuanlan.zhihu.com/p/478696535">在搭载M1芯片的MacBook
Pro上感受tensorflow的表现</a></p>
<table>
<thead>
<tr class="header">
<th>处理器</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Apple M1 GPU</td>
<td>15s</td>
</tr>
<tr class="even">
<td>Apple M1 CPU</td>
<td>24s</td>
</tr>
<tr class="odd">
<td>NVIDIA A100-40G</td>
<td>5s</td>
</tr>
<tr class="even">
<td>Intel CPU</td>
<td>34s</td>
</tr>
</tbody>
</table>
<h3 id="picgo">Picgo</h3>
<ol type="1">
<li><p>项目地址 https://github.com/Molunerfinn/PicGo/releases</p></li>
<li><p>下载链接
https://github.com/Molunerfinn/PicGo/releases/download/v2.3.1/PicGo-2.3.1-arm64.dmg</p></li>
<li><p>清除 app 的隔离属性
<code>sudo xattr -d com.apple.quarantine "/Applications/PicGo.app"</code></p></li>
<li><p>picgo设置 <img data-src="https://githubimages.pengfeima.cn/images/202302211531575.png"
alt="Picgo设置" /></p></li>
<li><p>图床设置 <img data-src="https://githubimages.pengfeima.cn/images/202302211532165.png"
alt="图床设置" /></p></li>
</ol>
<h3 id="marginnote">MarginNote</h3>
<p>License Email ：499908174@qq.com License Name ：马 鹏飞 License Code
：id411195361195odr</p>
<h3 id="mathpix-snipping-tool">Mathpix snipping tool</h3>
<p>账号：375Jgc366@alumni.stanford.edu 密码：aAmath1@A</p>
<h2 id="git">GIT</h2>
<h3 id="清理仓库历史">清理仓库历史</h3>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 切换到一个脱离主分支的另外一条全新主分支，不用太在意叫什么，因为后面还会修改分支名称</span>
<span class="token function">git</span> checkout <span class="token parameter variable">--orphan</span> latest_branch
<span class="token comment"># 暂存所有改动过的文件，内容为当前旧分支的最新版本所有文件</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>
<span class="token comment">#提交更改</span>
<span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">"commit message"</span>
<span class="token comment">#删除原始主分支</span>
<span class="token function">git</span> branch <span class="token parameter variable">-D</span> main
<span class="token comment">#将当前分支重命名为 main</span>
<span class="token function">git</span> branch <span class="token parameter variable">-m</span> main
<span class="token comment">#最后，强制更新您的存储库</span>
<span class="token function">git</span> push <span class="token parameter variable">-f</span> origin main
</code></pre>
<h3 id="从仓库的历史记录中删除文件"><a
href="https://docs.github.com/zh/repositories/working-with-files/managing-large-files/about-large-files-on-github#removing-files-from-a-repositorys-history">从仓库的历史记录中删除文件</a></h3>
<h3 id="上传文件到github-realease"><a
href="https://docs.github.com/en/rest/releases/assets?apiVersion=2022-11-28#upload-a-release-asset">上传文件到GitHub
Realease</a></h3>
<p>需要这些参数：</p>
<ol type="1">
<li>owner</li>
<li>repo</li>
<li>release_id</li>
<li>name 文件名</li>
</ol>
<p>具体可查看<a
href="https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230209/GitHub.API.upload.files.to.Release.py">Python代码</a></p>
<h3 id="调用github-api处理markdown文本">调用GitHub
API处理Markdown文本</h3>
<p>https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230209/text.html
https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230209/text.md
https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230209/github_markdown.py</p>
<h2 id="邮件测试">邮件测试</h2>
<h3 id="python">Python</h3>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> smtplib
smtpObj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">"499908174@qq.com"</span><span class="token punctuation">,</span><span class="token string">"zzokkzruycbobicd"</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span><span class="token string">"499908174@qq.com"</span><span class="token punctuation">,</span><span class="token string">"mapengfei@mail.nwpu.edu.cn"</span><span class="token punctuation">,</span><span class="token string">"ddddfasdfa"</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> smtplib
smtpObj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">"smtp.163.com"</span><span class="token punctuation">,</span><span class="token number">465</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">"merryjingle@163.com"</span><span class="token punctuation">,</span><span class="token string">"OCDVFOFNDTXLIXGN"</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span><span class="token string">"merryjingle@163.com"</span><span class="token punctuation">,</span><span class="token string">"mail@pengfeima.cn"</span><span class="token punctuation">,</span><span class="token string">"ddddfasdfa"</span><span class="token punctuation">)</span>
smtpObj<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<h2 id="vercel">Vercel</h2>
<h3 id="反向代理"><a
href="https://blog.csdn.net/qq_39010320/article/details/119923538">反向代理</a></h3>
<ol type="1">
<li>创建配置文件<code>emoji.json</code> <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> vercel
<span class="token function">vi</span> emoji.json</code></pre>
<pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">"routes"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span><span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"/(.*)"</span><span class="token punctuation">,</span><span class="token property">"dest"</span><span class="token operator">:</span> <span class="token string">"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/$1"</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code></pre></li>
<li>安装、登陆Vercel，创建项目 <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-g</span> vercel
vercel longin
vercel <span class="token parameter variable">-A</span> emoji.json <span class="token parameter variable">--prod</span></code></pre> <pre class="language-bash" data-language="bash"><code class="language-bash">$ vercel <span class="token parameter variable">-A</span> emoji.json <span class="token parameter variable">--prod</span>
Vercel CLI <span class="token number">28.9</span>.0
? Set up and deploy “~/Documents/GitHub/emoji/vercel”? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> y
? Which scope <span class="token keyword">do</span> you want to deploy to? shaoyaoqian
? Link to existing project? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span> n
? What’s your project’s name? shaoyaoqian-emoji
? In <span class="token function">which</span> directory is your code located? ./
Local settings detected <span class="token keyword">in</span> vercel.json:
No framework detected. Default Project Settings:
- Build Command: <span class="token variable"><span class="token variable">`</span><span class="token function">npm</span> run vercel-build<span class="token variable">`</span></span> or <span class="token variable"><span class="token variable">`</span><span class="token function">npm</span> run build<span class="token variable">`</span></span>
- Development Command: None
- Install Command: <span class="token variable"><span class="token variable">`</span><span class="token function">yarn</span> <span class="token function">install</span><span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span><span class="token function">pnpm</span> <span class="token function">install</span><span class="token variable">`</span></span>, or <span class="token variable"><span class="token variable">`</span><span class="token function">npm</span> <span class="token function">install</span><span class="token variable">`</span></span>
- Output Directory: <span class="token variable"><span class="token variable">`</span>public<span class="token variable">`</span></span> <span class="token keyword">if</span> it exists, or <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">.</span><span class="token variable">`</span></span>
? Want to modify these settings? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span> n
🔗  Linked to shaoyaoqian/shaoyaoqian-emoji <span class="token punctuation">(</span>created .vercel and added it to .gitignore<span class="token punctuation">)</span>
🔍  Inspect: https://vercel.com/shaoyaoqian/shaoyaoqian-emoji/FyV69HGAWUtU4ihVFXq9hNtbaNzY <span class="token punctuation">[</span>1s<span class="token punctuation">]</span>
✅  Production: https://shaoyaoqian-emoji.vercel.app <span class="token punctuation">[</span>6s<span class="token punctuation">]</span></code></pre></li>
</ol>
<h2 id="表情包制作">表情包制作</h2>
<h4 id="表情包下载">表情包下载</h4>
<ol type="1">
<li><a
href="https://github.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis">Microsoft
animated fluent emojis</a></li>
<li><a href="https://blob.cat/main/public">Blobcat</a></li>
</ol>
<h4 id="生成配置文件"><a
href="https://github.com/kkfive/emotion_generate">生成配置文件</a></h4>
<h2 id="docker">Docker</h2>
<h3 id="shadowsocks-服务端运行">shadowsocks 服务端运行</h3>
<pre class="language-none"><code class="language-none">sudo docker run -d -p 444:444 --name shadowsocks --restart always oddrationale&#x2F;docker-shadowsocks -s 0.0.0.0 -p 444 -k a12345 -m aes-256-cfb
sudo docker logs -f -t --tail 10 shadowsocks</code></pre>
<h2 id="docker-compose">docker-compose</h2>
<h3 id="搭建mysql服务">搭建mysql服务</h3>
<p>在mysql文件夹下创建<code>my.conf</code>和<code>docker-compose.yml</code>两个文件，通过命令<code>sudo docker-compose up -d</code>启动服务。
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> mysql <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> mysql</code></pre> <pre class="language-conf" data-language="conf"><code class="language-conf">[mysqld]
user&#x3D;mysql
default-storage-engine&#x3D;INNODB
character-set-server&#x3D;utf8
[client]
default-character-set&#x3D;utf8
[mysql]
default-character-set&#x3D;utf8</code></pre> <pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> password
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/mysql
      <span class="token punctuation">-</span> ./my.cnf<span class="token punctuation">:</span>/etc/mysql/my.cnf
    <span class="token key atrule">command</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span><span class="token punctuation">-</span>max_connections=1000
      <span class="token punctuation">-</span><span class="token punctuation">-</span>character<span class="token punctuation">-</span>set<span class="token punctuation">-</span>server=utf8mb4
      <span class="token punctuation">-</span><span class="token punctuation">-</span>collation<span class="token punctuation">-</span>server=utf8mb4_general_ci
      <span class="token punctuation">-</span><span class="token punctuation">-</span>default<span class="token punctuation">-</span>authentication<span class="token punctuation">-</span>plugin=mysql_native_password</code></pre></p>
<h3 id="定时执行python脚本">定时执行Python脚本</h3>
<ol type="1">
<li><code>cronfile</code>用于设定定时执行脚本<code>run.sh</code>。</li>
</ol>
<pre class="language-cronfile" data-language="cronfile"><code class="language-cronfile">50 * * * * cd &#x2F;data &amp;&amp; bash .&#x2F;run.sh</code></pre>
<ol start="2" type="1">
<li><code>run.sh</code>设定执行命令。</li>
</ol>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#! /bin/sh</span>
<span class="token builtin class-name">cd</span> /data <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> *.html
<span class="token builtin class-name">cd</span> /data <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> changjiang_daily.html tech_daily.html hubei_daily.html youth_daily.html 
<span class="token builtin class-name">cd</span> /data <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> changjiang_sorted_daily.html tech_sorted_daily.html hubei_sorted_daily.html youth_sorted_daily.html 
<span class="token builtin class-name">cd</span> /data <span class="token operator">&amp;&amp;</span> scrapy crawl tech_daily <span class="token operator">&amp;&amp;</span> scrapy crawl youth_daily <span class="token operator">&amp;&amp;</span> scrapy crawl hubei_daily <span class="token operator">&amp;&amp;</span> scrapy crawl changjiang_daily
<span class="token builtin class-name">cd</span> /data <span class="token operator">&amp;&amp;</span> python3 send_result.py</code></pre>
<ol start="3" type="1">
<li><code>Dockerfile</code> 创建镜像。 <pre class="language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> python:3.9.6 <span class="token keyword">as</span> builder</span>
<span class="token instruction"><span class="token keyword">COPY</span> src/ /opt/src</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /opt/src</span>
<span class="token comment"># Install python3</span>
<span class="token instruction"><span class="token keyword">RUN</span> pip install -r requirements.txt</span>

<span class="token instruction"><span class="token keyword">FROM</span> builder <span class="token keyword">as</span> builder_ex</span>
<span class="token comment"># Install cron</span>
<span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; apt-get -y install cron </span>
<span class="token comment"># Copy hello-cron file to the cron.d directory</span>
<span class="token instruction"><span class="token keyword">COPY</span> src/cronfile /etc/cron.d/cron</span>
<span class="token comment"># Give execution rights on the cron job</span>
<span class="token instruction"><span class="token keyword">RUN</span> chmod 0644 /etc/cron.d/cron</span>
<span class="token comment"># Apply cron job</span>
<span class="token instruction"><span class="token keyword">RUN</span> crontab /etc/cron.d/cron</span>
<span class="token comment"># Create the log file to be able to run tail</span>
<span class="token instruction"><span class="token keyword">RUN</span> touch /var/log/cron.log</span>
<span class="token comment"># Run the command on container startup</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"cron"</span>, <span class="token string">"-f"</span>]</span></code></pre></li>
<li><code>docker-compose.yml</code>用于创建容器。 <pre class="language-docker-compose.yml" data-language="docker-compose.yml"><code class="language-docker-compose.yml">version: &#39;3&#39;
services:
  crawler:
    build: ..&#x2F;
    volumes:
        - .&#x2F;log:&#x2F;var&#x2F;log
        - .&#x2F;data:&#x2F;data
    #   - .&#x2F;data:&#x2F;opt&#x2F;src</code></pre>
文件夹结构如下：</li>
</ol>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302161411698.png"
alt="目录" />
<figcaption aria-hidden="true">目录</figcaption>
</figure>
<h2 id="nginx-proxy-manager">Nginx Proxy Manager</h2>
<p><a
href="https://github.com/NginxProxyManager/nginx-proxy-manager">Nginx
Proxy
Manager</a>为Nginx提供了网页端的管理界面。创建<code>docker-compose.yml</code>，通过命令<code>sudo docker-compose up -d</code>启动服务。通过不同域名访问服务器上的不同服务，在设置界面中将服务端口和域名关联起来。这里的IP地址不能是127.0.0.1，该怎么设置我也不知道。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202302221747041.png"
alt="设置代理" />
<figcaption aria-hidden="true">设置代理</figcaption>
</figure>
<pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">app</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'jc21/nginx-proxy-manager:latest'</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'80:80'</span>
      <span class="token punctuation">-</span> <span class="token string">'81:81'</span>
      <span class="token punctuation">-</span> <span class="token string">'443:443'</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/data
      <span class="token punctuation">-</span> ./letsencrypt<span class="token punctuation">:</span>/etc/letsencrypt</code></pre>
<h2 id="microsoft-office-365">Microsoft Office 365</h2>
<ol type="1">
<li>登陆开发者账号查看E5的订阅到期时间
https://developer.microsoft.com/zh-cn/microsoft-365/profile</li>
<li>登陆管理员账号分配office账号
https://developer.microsoft.com/zh-cn/office/dev-program</li>
<li>其中一个用户 <code>self@ylvbg.onmicrosoft.com</code></li>
</ol>
<h2 id="latex">LaTeX</h2>
<h3 id="github仓库的bibtex引用格式">GitHub仓库的bibtex引用格式</h3>
<pre class="language-bibtex" data-language="bibtex"><code class="language-bibtex">@misc&#123;GPT2-NewsTitle,
	author &#x3D; &#123;Cong Liu&#125;,
	title &#x3D; &#123;Chinese NewsTitle Generation Project by GPT2&#125;,
	year &#x3D; &#123;2020&#125;,
	publisher &#x3D; &#123;GitHub&#125;,
	journal &#x3D; &#123;GitHub repository&#125;,
	url&#x3D;”https:&#x2F;&#x2F;github.com&#x2F;liucongg&#x2F;GPT2-NewsTitle&quot;,
&#125;</code></pre>
<h2 id="clash-白名单设置">clash 白名单设置</h2>
<p>创建文件 <code>~/.config/clash/proxyIgnoreList.plist</code>
，加入域名。 <pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">plist</span> <span class="token name">PUBLIC</span> <span class="token string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="token string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plist</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>192.168.0.0/16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>10.0.0.0/8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>172.16.0.0/12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>127.0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>localhost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>*.local<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>*.crashlytics.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>*.apple.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>*.pengfeima.cn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plist</span><span class="token punctuation">></span></span></code></pre></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>自适应时间步长的调整策略</title>
    <url>/posts/39043/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="17f01965135bc2a7e65ad65d1d084dea44eb87e8d90c5036ec6086d371d4310e">99b2896ccf1895bd1cc62fe15326c8100d42c2be579a4e228a8ad399160c56581710b2b766f5327d2360377038bcec664b028fedae61639e5de8c6b84a81900714b2431abc81ff53b5ff30cae683f62b7f394c600a7d27e6827abd1ee46eda0a0c53c11066c34cf80cc6c7d81434b4e178e252b3c4cb8d109dcb9d88c4a9c88bc661041a5db8629484034c6e6131cded3c1945dff8cd40958c117740375fd0c6c4e0b9e192df8a311452fe0f8cd89b8be1ab5a68388b19e80c6a2774aca4a245b9e0d796f0201b8b1b31cb9ccebb88af9efd1782a9caf9802bf8ef9d3246dd59f70e2e8a70bb3f904ac6f83340b9fd19c4ce6a9e16a06209e8b8bf090172070e3efa0543509de4f28dab069864b8627a9408a645bab22c8669d4c7610630e8a7eca44fb74113f9d93d2812d48736bee08cd581e2b4560ebe503f1268411cab9709a6e24200e51538284f2c67b19702b93e693a1546a816814a22e3db1397a779234ae3ca651d99f2cf2183fc74a4fd63db989676878638c2f6063ded2884990f9163d9d8fa5c35df540555982df1208f8c53cd06dcb6af464418990512c104f312f492b9ea2fc057caee69100b6c8259817d72668b3d8f4c8bf7f1e937511ef21146c0bf94e4842b9c099bdd1a763c9530bd7506a3741d414096fa91e507cedd947d5e4e9b7f2e6a64fbb0b2c17bfc3d1ad9cb2b31d8fc5112945c7722ecd0223042d90bc49ec25eb6701b19b4a3f3b31530b4bbb2a5cecb00bb7f8f0bdede56b3d564c6b233c34632b791d014920bb940ffc35a320ae4eeaa3f914c7fc5981a6ed11e9960a4f81dd3f180c22b1bafb61b9f9cd424c504d06f5b8203a6afcb98113c4432e6c3048ac541c2523ab185466bf1f6c96693435410c27a2ffaa4c48dd074631164d19d4e18110c47df52798bf5819ba71f660c6178700f306ff4fdfacb0304a64c443397085438894110411ed7c0fce90a0131bd400892ac7990a72f65385b56f5a0759e025ce8250cc8ac70de7db2b92d59d95a16ca81208ab03793c079329f392c8ccbc4b99b808b020dbecc2fcb828d72c92a76a253e7530716fbc9107739257f8bff9ccfa6bc29726e25fff548d671db81c30f6060a3f9f048b754e5383065b975bb31763320b1aba48148e80db03023c4b6e94ebc948b2f949ba9ca53ed8ed2f0cdca2651dae2baf6c9396f7794560069fa653370c69e12ed864e425f1eb3ae97f7cb2ec06dd2de6ba99013bfdde40e8dc928b7303b3be8d39d1cdfe6ce8daa06b3337f6be5b161ddfc74194f045a21f6c3d4941cef86107e5e1a2dafcb527a8e07f63de2513789185c3b59c63b2e93d17433f7d91a8ee1c4f4bb31d003f2db2fc67b42fce2cefc3cdd0be9cf43037cfcc48fda24d7ad4f6330d13b5ad32767faf085f122d6801bc3f88d7dc26a92a04ec5c5f751eb33c13799d56473820aae130e6d5fa99709feeacefd30757194c5988cec0965810f6181f2a77b262b81072944baa2ea85344ca054af63f38426f2564cb93e9930aa2a4d8bcc04e1152f2114a7855b17499929c0e78555fbd0f07668785e8acd1d5eadcf69aacb51b801c7976613a551fc99b193c8413237d5e1ff411459b2fbd43d99eedfa6def3caefcd9db41096fb65af65ab20ea54804b440fb66b53eb87c724a39edb411360e5b6d4cf0fc69d4047a65e4e4513c52eba64a9b7a7dd17362236366491a0f30572b406fe05dc155ccdefff68f9977cff229a41e2858a53a7533259d7eb977f6048840e89153f0f8bb2c2eafeca9e9ef5714d9eb960f79a6be53de7c708b54e26c2a9fc835c12f3299a5c688c798fd7e8cc91053d798fce30ae9ebabf3ad21f07879deb5b83718f3a9ef5b67a790283a75408e2be773530a72562e99003aab5cb9b5c9cad45ecc2a588a011942ae8f3e02b7d4d0d821f5d6e48364978bd6e034c21dccc9b908df8aefa322c0f62930d6ed3cc75c027a4451d40c666ebdbdb1503254c72640478b9bd20f926b4801050aa9b5403fac9d08b91f0bdda2633ab2ebc791fc4380e4d5e41826466c1ee3d062e56dbd2efdd67e4e0c8b4c7829bd1e5779f1aa0b811c87b7643282e76084fb527e4ccfedb8025fe76c4ef15ee739bd124bb9e0e69f818fc5ec5013e908b9818903485f5f917789d907bf8f53d557dc48ca0ab02546d3c73fbc817c9a8819972fbbb6c959f8b54507aade75ecf9998676d13a2a82e4ee26d9317a30dfd728560a67f1640ea22b0727288f5b2b52bc3f282b4f38a338dfdc5bd1ff7c97dac938d5afb969e9215282cd472feb202f76f7a26a8818c3d9fbce9570fae41c71020e9999a8551f0da75ad7b2989837645f7ebfd2db6ced7cf26b0ece2ace1c4451f7c237efd802ff99e8dce076abf75b9cf8269ccf1dbf077569eb8e2e0aa0f5eeac8b4467aa6202db742586c41ede2e61206b405a73652f43c46e737e09585a6c7c31b7907abc3a7ffb6783eed1a809305e3b1db5f91fd89792055b639e875aff58d707a6d3dde4db781246d78e71b2b9ba82ab4fba10a545a169fc9432799d9403ecd3947bd953d9a753db3fc422ac746ada879072a44c8ab13c5dbcb049106414b0bb0143a708f3de0752a7a47b46e17e057424e2cec3b63b28b38d6620812cba49d7ae026bc7a77bf850c37094351afb01f851c03b77a9a3feb5384bcabbcd5246e131528578651d51749686045e962bf2259469f0bae5662722d28f175a6588cef0afeac90efb9d1df3d392f193b47702788c888e5a0d86ee2cb1dad5356103a33f930ff45b0108cf45c692cb3507a0e800da806b6f0722f2365db5e0af846b3e8f1d2a64051be0e939d3a1a1c8738c43480e8ac020464d0e4cc1c98ebbccf911df2086a6d4553ca82d3c11567d502767fd7e5266387be237e7a1723725c8d844881aa19104b1adb4842bd6dc406bee4f384edc0ca01f5b0bd5163e9bb75ec72cbbca0558821c3dba93310b4d942543402fd3e8eeb34ae60312e3a71e518d78fd03f94d724e026f351462fa1b84c2af18307bc465c5f8f5943bc97f84398c7a95f99866d6290eaeae178363b5c81d6cddc1bb9c692bac77a52800e2c816a8fe003b3eba2c2ea399dc5d0808cab96dca73acb20518839bfdd1949ae271109d2cd95e106bad39e054281083229e0ce4f8232420492b9012e1a5a755c6df9c514023cb551b73757e4fbb56a18811156516fd1bb0c1051118b810c1b3130682a9b99e82cd18d2437fed81ceb94bf70917b7d63a7e3c7fa89379759f61e445fffbb56de8d4ee7b5290a8db5199d085b548ba76a5daa0730be37a8053b34eb9d4131ab1e795dc3b3eb51fdcff174f86b5a35a37d335eb701b337dcf5981e9e2d8b3683b7dfab1b7e1d4278cce222faf8283a614a1e253e4dd42270ea91c823c6369e499257cf38fd5da38e1ea00bb7b6e4667b7c872dc58943a343fca3828823c61b212c046202123979ce647078f8d3117902f27d03dc1fd1af50965e7915b5652921083e59b062943e8142fb447e49a2fc3909b2a478d1169ce274d16bdc0055c53d44f8dea1f588680fc9e8080f020f28b891f873248891662ce756b096976492d76ac864175327c0173e50ec698d642544b5d07ee34da5f6909e44e31b69130284e2788f5badf6601e8091b026a7bf18f83fddc03624f15f5d884298b34a9c7fc57e90139849c8df8f6be6f6e6abde0afc3b6263d9b63950e730e81255cd055f430da59725d8e7c2ec7c559c2c2bcb19e8a02b49920696bbcbcd54fda7fbc4cc7b23841e622bc5b8ec8974963ce26d9d77359b8888958a9e009fb700288df72af0aefb018d548dc1d86b637fe0717c7942cfcf384fd83ab2edf1ef81074f145e2541cd97b0e083e05081bdbe62d8c4262bb6916ee5792cc2606be8fe2b35b587e38d1975988d0cb4d9306b2c9f4e718c011eaa83a08078452587a5b1a1920d6b3c86408a2b9a41b9341e5277d0a4603f8b1cd7c1589c2be9e29ec18df021a6de1d4f4fbb7ec981eba99b352c63a063a699fdd1293d534e54a3041a60dc7b4928e4f8c7869194706427102b7aa9c666df5947388d913732b51defa6447ec41bdc94c208bc19d394aca0775a56eba86c99946488bfc9b78b7e012abf1e8c8fff163256ad38ffa402ee605147ff6d515d123630eecb8e5414546fe2488a85493e5aefbdef4e27b38719fd2cc479b8472bb4d02f5eb6163e6d0566c4d508a44cd82bcc0e129944a83369816a833dc6b83b701352e61b03cacab7e5632e40a18096f46461763c58da5e61cf63dc0fa2b54ff4ddb102cd3c266a7a2e9fbd282d146313ba09377ac736ddfd42e6907fe63d717f3ba2c790a6c0a7ca9cfdaf712da1e5df49e73e702b9f75e89da421c0c4c6d70ceb582b5917dfbdca9e63e6f7da1d24c6c90d5d81eaf46a988b1de4ac36a35625fc92bc03ec295bae17abd60962b5c033b64c2f84150dd076aac5faf44010bf56cd9b57c4ac61661ce39e71e28d5fb8cfed617bb27b637527749b15e57d456fa16546a6e495a1a23c854643ad7334f7e75c43e46b3179473d36b28fdf11984411bfc2219f4ee977391b6e5ce8a5b377f0511400879a25e45ffee15b53467252</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-wave">
      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>secret</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo的wiki文档</title>
    <url>/posts/1/</url>
    <content><![CDATA[<p>在obsidian建立wiki文档，在使用了Hexo的网站中发布。双中括号不是markdown的语言，因此需要自己写代码进行转换。
<span id="more"></span> ## 问题
以multigrid文件夹下的<code>基本定义.md</code>文档为例，hexo会为它生成链接<code>www.example.com/wiki/multigrid/基本定义.html</code>，因此，wiki格式写成<code>[[基本定义#定义1|定义4]]</code>，md格式写成<code>[定义1](基本定义.html#定义1)</code>均可生成正确的跳转链接，生成的链接为<code>%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AE%9A%E4%B9%89html#%E5%AE%9A%E4%B9%891"</code>，它是<code>基本定义.html#定义1</code>的转码。
## 方法
现在，我要为hexo-stellar主题加入这一功能，在hexo渲染文档之前将<code>[[基本定义#定义1|定义5]]</code>替换换为<code>[定义1](基本定义.html#定义5)</code>，hexo就能正确渲染文档了。当wiki链接两端带有符号"`"时，要求显示源码，因此忽略wiki链接的替换，例如<code>[[基本定义#定义1|定义2]]</code>。
## 代码 在文件<code>scripts/main.js</code>加入如下代码即可。
<pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">wikiprocess</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    content <span class="token operator">=</span> data<span class="token punctuation">.</span>content<span class="token punctuation">;</span>
    <span class="token keyword">var</span> items <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;![`])\[\[(.*?)\]\](?![`])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> items_new <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        item <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        item <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        a <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        link <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> name <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> name <span class="token operator">=</span> link<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        items_new<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;a href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>link<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/a></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items_new<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        item <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        item_new <span class="token operator">=</span> items_new<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item_new<span class="token punctuation">)</span><span class="token punctuation">;</span>
        content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> item_new<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    data<span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token keyword">return</span> data<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> <span class="token function-variable function">processSite</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">wikiprocess</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'before_post_render'</span><span class="token punctuation">,</span> processSite<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre> ## 效果</p>
<p>将文档中的语句<code>[[2023-02-08-零碎笔记#清理仓库历史|清理仓库历史]]</code>转换成了超链接<a
href="2023-02-08-零碎笔记.html#清理仓库历史">清理仓库历史</a>，达到了想要的效果。</p>
<h2 id="有待改进">有待改进</h2>
<ul>
<li>鼠标悬停预览目标页面。很多wiki文档中都有此效果，大大提高了文档的阅读效率。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年3月上旬</title>
    <url>/posts/32353/</url>
    <content><![CDATA[<div id="empty">

</div>
<span id="more"></span>
<h2 id="section">2023-03-01 10:01</h2>
<p>开始写论文的引言</p>
<h2 id="section-1">2023-03-01 11:30</h2>
<p>吃饭</p>
<h2 id="section-2">2023-03-01 14:42</h2>
<p>继续写引言</p>
<h2 id="section-3">2023-03-02 10:22</h2>
<p>继续写引言</p>
<h2 id="section-4">2023-03-06 20:48:06</h2>
<ol type="1">
<li>回忆了一下怎么使用我的程序。 <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> build <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build <span class="token operator">&amp;&amp;</span> cmake <span class="token punctuation">..</span>
<span class="token function">make</span> <span class="token parameter variable">-j32</span></code></pre></li>
</ol>
<h2 id="section-5">2023-03-06 22:37:24</h2>
<ul>
<li>成功测试发送邮件功能</li>
</ul>
<h2 id="section-6">2023-03-07 00:12:17</h2>
<ul>
<li>成功测试计时功能</li>
</ul>
<h2 id="section-7">2023-03-07 10:53:07</h2>
<ul>
<li>测试插值算子和延拓算子. 程序为
<code>test/test_ibm_elerian_larangian_interaction.cpp</code> ,
测试通过。 考虑到计算效率, 目前固体只使用一阶有限元方法求解。</li>
</ul>
<h2 id="section-8">2023-03-07 16:00:50</h2>
<ul>
<li>显式浸没边界法, 程序为
<code>test_ibm_disk_driven_explicit.cpp</code></li>
</ul>
<p>使用 ImersedBoundaryMethod 类 set_dolfin_solver</p>
<h2 id="section-9">2023-03-07 18:02:31</h2>
<p>test_ibm_disk_driven_explicit.cpp 能够运行了,
但是流体的边界条件还不知道怎么设置。</p>
<p>可能需要在CPU中设置, 然后传输到GPU中。</p>
<h2 id="section-10">2023-03-08 10:09:21</h2>
<p>对于直杆弯曲问题, 固定边界有两种方式： 1. 通过Dirichlet条件限制 2.
通过惩罚项约束</p>
<p>先实现第一种方法的显式时间离散。</p>
<p>现在, test_ibm_bended_bar_explicit_constraint.cpp 能够运行了。</p>
<h2 id="section-11">2023-03-08 10:28:36</h2>
<p>现在体积力的计算没问题了。</p>
<p>代码位置: 06b5d561eee0c173c3b65442c6d4ef7cfa3d29c3 边界标记:
https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/##
20230221/boundaries## 20230308112542.vtu 体积力:
https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/##
20230221/forces## 20230308112803.vtu</p>
<p>体积力的图片： <img data-src="https://githubimages.pengfeima.cn/images/202303081109425.png"
alt="image-20230308110958262" /> <img data-src="https://githubimages.pengfeima.cn/images/202303081110614.png"
alt="image-20230308111008591" /> <img data-src="https://githubimages.pengfeima.cn/images/202303081110118.png"
alt="image-20230308111015098" /></p>
<h2 id="section-12">2023-03-08 14:58:31</h2>
<p>弯曲直杆问题的显式计算程序
<code>test_ibm_bended_bar_explicit_constraint.cpp</code> 。</p>
<ol type="1">
<li>测试限制条件。</li>
</ol>
<p>固体类需要有一个函数, 修改传入的位移或者速度。 GenericSolidSolver
对象几乎是一个无状态的对象, 它不存储当前位置或者初始位置。
真正的数据都存储在 <code>solid_mesh</code> 对象中,
名为<code>_solid_positions</code> ,
可以间接通过ImmersedBoundaryMethod获取。</p>
<h2 id="section-13">2023-03-08 21:12:57</h2>
<h3 id="程序框架的改进">程序框架的改进</h3>
<p>固体求解器不存储以下变量： 1. 固体的当前位置 2. 固体的体积力
固体求解器根据传入的固体的当前位置计算出固体的体积力。但是会存储一些与模型相关的数据，例如：
1. 边界条件存储在boundaries变量中 2. 当前时刻和时间步长 3.
其他与模型相关的变量，例如本构参数，电势等等。</p>
<p>ImmersedBoundaryMethod 中更新 solid solver
位置的函数也不再有用，因此一并删去。</p>
<p>ImmersedBoundaryMethod 增加了限制固体位移的函数。</p>
<h2 id="section-14">2023-03-08 21:30:07</h2>
<h3 id="写论文的引言">写论文的引言</h3>
<h2 id="section-15">2023-03-09 10:00:34</h2>
<h3 id="完成了引言的参考文献">完成了引言的参考文献</h3>
<h2 id="section-16">2023-03-09 11:07:06</h2>
<h3 id="测试">测试</h3>
<p>带约束条件的直杆弯曲算例
<code>test_ibm_bended_bar_explicit_constraint.cpp</code> 的运行结果</p>
<h4 id="参数">参数：</h4>
<ol type="1">
<li>固体网格的坐标 (0.45, 0.45, 0.1) (0.55, 0.55, 0.9)</li>
<li>网格剖分 {4, 4, 32};</li>
<li>流体粘性、密度、时间步长： double nu = 0.01; double rho = 1.0;
double dt = 0.0001;</li>
<li>背景网格 int3 dim_bg = {65, 65, 65}; double3 dh_bg = {0.0, 0.0,
0.0}; double3 box_size_bg = {1.0, 1.0, 1.0};</li>
</ol>
<p>不稳定，可以看到<code>t=0.298</code>时刻的运行结果： <img data-src="https://githubimages.pengfeima.cn/images/202303091108961.png"
alt="弯曲直杆问题的运行结果" /></p>
<h4 id="计算结果">计算结果</h4>
<p>https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230221/bended_bar_020230309111559.vtu</p>
<h2 id="section-17">2023-03-09 11:39:40</h2>
<h3 id="应变能函数中加入不可压项">应变能函数中加入不可压项</h3>
<pre class="language-python" data-language="python"><code class="language-python">kappa <span class="token operator">=</span> <span class="token number">100000.0</span>
J <span class="token operator">=</span> det<span class="token punctuation">(</span>F<span class="token punctuation">)</span>
kappa <span class="token operator">*</span> <span class="token punctuation">(</span>J<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>ln<span class="token punctuation">(</span>J<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>
<h2 id="section-18">2023-03-09 17:05:14</h2>
<p>加入了不可压项，时间步长仍为<span
class="math inline">\(0.0001\)</span>，仍旧不稳定，这在预料之中。</p>
<h3 id="代码位置">代码位置</h3>
<p>451c31458906e2d2c158fc404c4824418cb3067e ### 结果 <img data-src="https://githubimages.pengfeima.cn/images/202303091708783.png"
alt="t=0.0298" /></p>
<h3 id="问题">问题</h3>
<ol type="1">
<li>边界条件可能没有在计算固体的体积力前施加</li>
<li>不可压边界条件不起作用</li>
</ol>
<h2 id="section-19">2023-03-09 20:11:49</h2>
<h3 id="问题一不可压条件">问题一：不可压条件</h3>
<p>固体的不可压条件可以通过两种方法施加，第一种是拉格朗日乘子法，另一种是通过惩罚项强制<span
class="math inline">\(\text{det}(\mathbb{F})=1\)</span>满足。一般来说，只要选取其中一种即可。浸没边界法中，不可压条件自然存在。整个计算区域的速度场满足无散度条件，相当于使用了拉格朗日乘子法。但是速度经过插值算子传递到固体区域后，无散度边界条件可能不精确满足，因此需要对固体额外施加不可压条件。以后可以看看文章<code>A monolithic projection framework for constrained FSI problems with the immersed boundary method</code>
是怎么施加约束条件的。</p>
<h3
id="问题二固体位移的dirichlet边界条件">问题二：固体位移的Dirichlet边界条件</h3>
<p>有两种方法。第一种是每个时间步后将固体强制拉回原位，第二种是惩罚项。目前发现第一种方法不行。张心欣是用的第一种方法，可能是因为它使用的固体本构简单吧，所以他的没问题。IBAMR一直使用的是第二种方法。</p>
<h2 id="section-20">2023-03-10 09:25:49</h2>
<h3 id="计划">计划</h3>
<ol type="1">
<li>符号表</li>
<li>完成浸没有限元方法的数学描述</li>
</ol>
<h2 id="查看结果">2023-03-10 10:08:57 查看结果</h2>
<h3 id="代码位置-1">代码位置</h3>
<p>168394afa3200c5016eadc8bbfdf21b2b5b2d4cd</p>
<h3 id="参数-1">参数</h3>
<pre class="language-c++" data-language="c++"><code class="language-c++">int3 dim &#x3D; &#123;4, 4, 32&#125;;
dolfin::Point p2(0.45, 0.45, 0.1);
dolfin::Point p3(0.55, 0.55, 0.9);

double nu &#x3D; 0.01;
double rho &#x3D; 1.0;
double dt &#x3D; 0.00001;
int3 dim_bg &#x3D; &#123;65, 65, 65&#125;;
double3 dh_bg &#x3D; &#123;0.0, 0.0, 0.0&#125;;
double3 box_size_bg &#x3D; &#123;1.0, 1.0, 1.0&#125;;</code></pre>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># Constituitive parameters</span>
C <span class="token operator">=</span> <span class="token number">20000.0</span>  <span class="token comment"># dyn/cm^2 (2kPa)</span>
bf <span class="token operator">=</span> <span class="token number">8.0</span>
bt <span class="token operator">=</span> <span class="token number">2.0</span>
bfs <span class="token operator">=</span> <span class="token number">4.0</span>

kappa <span class="token operator">=</span> <span class="token number">1e4</span> <span class="token comment"># Penalty for incompressibility</span>
beta <span class="token operator">=</span> <span class="token number">1e4</span>  <span class="token comment"># Penalty for boundary conditions</span>

<span class="token comment"># Boundary markers</span>
bottom   <span class="token operator">=</span> <span class="token number">2</span>
fixed    <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment"># Pressure</span>
pressure <span class="token operator">=</span> <span class="token number">40</span></code></pre>
<h3 id="结果">结果</h3>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202303101008811.png"
alt="image-20230310100836714" />
<figcaption aria-hidden="true">image-20230310100836714</figcaption>
</figure>
<h3 id="数据">数据</h3>
<p>https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230221/position00019920230310101333.vtu</p>
<h3 id="问题-1">问题</h3>
<ol type="1">
<li>惩罚项不够大</li>
<li>直杆没有向正上方偏移</li>
</ol>
<h2 id="符号表">2023-03-10 10:23:34 符号表</h2>
<p>以下是本论文中使用的符号的非详尽列表。我们将采用粗体字符表示矢量的惯例。</p>
<h3 id="欧拉描述">欧拉描述</h3>
<table>
<colgroup>
<col style="width: 27%" />
<col style="width: 60%" />
<col style="width: 12%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">Explanation</th>
<th style="text-align: left;">中文解释</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\Omega\)</span></td>
<td style="text-align: left;">An open subset of <span
class="math inline">\(\mathbb{R}^n\)</span></td>
<td style="text-align: left;">背景区域</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span class="math inline">\(\partial
\Omega\)</span></td>
<td style="text-align: left;">boundary of <span
class="math inline">\(\Omega\)</span></td>
<td style="text-align: left;">区域边界</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\mathbf{u}\)</span></td>
<td style="text-align: left;">Velocity field</td>
<td style="text-align: left;">速度场</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(p\)</span></td>
<td style="text-align: left;">Pressure field</td>
<td style="text-align: left;">压强场</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\mathbf{n}\)</span></td>
<td style="text-align: left;">Unit vector normal to <span
class="math inline">\(\partial \Omega\)</span></td>
<td style="text-align: left;">单位外法向</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(\nabla\cdot\mathbf{u}\)</span></td>
<td style="text-align: left;">Divergence of <span
class="math inline">\(\mathbf{u}\)</span></td>
<td style="text-align: left;">速度散度</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\nabla\mathbf{u}\)</span></td>
<td style="text-align: left;">Gradient of <span
class="math inline">\(\mathbf{u}\)</span></td>
<td style="text-align: left;">速度梯度</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(\Delta\mathbf{u}\)</span></td>
<td style="text-align: left;">Laplacian of u, defined by <span
class="math inline">\(\Delta=\nabla\cdot\nabla\)</span></td>
<td style="text-align: left;">拉普拉斯算子</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\langle\cdot,\cdot\rangle\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(L^2\)</span>-inner product on <span
class="math inline">\(\Omega\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(L^2\)</span>内积</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(\|\cdot\|_k\)</span></td>
<td style="text-align: left;">Norm defined by the <span
class="math inline">\(H^k\)</span>-inner product on <span
class="math inline">\(\Omega\)</span> if <span class="math inline">\(k =
0, 1\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(H^{k}\)</span>范数</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\|\cdot\|_2\)</span></td>
<td style="text-align: left;">Euclidian norm</td>
<td style="text-align: left;">欧几里得范数</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(\mathbf{x}\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(\mathbf{x}=(x_1,x_2,x_3)\)</span> Eulerian
coordinates</td>
<td style="text-align: left;">欧拉坐标</td>
</tr>
</tbody>
</table>
<h3 id="拉格朗日描述">拉格朗日描述</h3>
<h3 id="参数-2">参数</h3>
<table>
<colgroup>
<col style="width: 15%" />
<col style="width: 66%" />
<col style="width: 18%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">Explanation</th>
<th style="text-align: left;">中文解释</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\mu\)</span></td>
<td style="text-align: left;">(Dynamic) Viscosity</td>
<td style="text-align: left;">动力粘性</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(\rho\)</span></td>
<td style="text-align: left;">Density</td>
<td style="text-align: left;">密度</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(\nu\)</span></td>
<td style="text-align: left;">Kinematic viscosity, defined as
nu:=mu//rho</td>
<td style="text-align: left;">运动粘性</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span class="math inline">\(\Delta
t\)</span></td>
<td style="text-align: left;">Timestep</td>
<td style="text-align: left;">时间步长</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(Re\)</span></td>
<td style="text-align: left;">Reynolds number</td>
<td style="text-align: left;">雷诺数</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(h\)</span></td>
<td style="text-align: left;">Discretization parameter<a href="#fn1"
class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a></td>
<td style="text-align: left;">空间离散参数</td>
</tr>
</tbody>
</table>
<h3 id="矩阵的性质">矩阵的性质</h3>
<table>
<colgroup>
<col style="width: 15%" />
<col style="width: 60%" />
<col style="width: 24%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">Explanation</th>
<th style="text-align: left;">中文解释</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(L^2(\Omega)\)</span></td>
<td style="text-align: left;">Space of square-integrable functions on
<span class="math inline">\(\Omega\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(\Omega\)</span>上的平方可积函数</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(H^k(\Omega)\)</span></td>
<td style="text-align: left;">Space of <span
class="math inline">\(L^2\)</span>-functions on <span
class="math inline">\(\Omega\)</span> with derivatives up to order <span
class="math inline">\(k\)</span> which are also in <span
class="math inline">\(L^2(\Omega)\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(H^{k}\)</span>空间</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span
class="math inline">\(H_0^k(\Omega)\)</span></td>
<td style="text-align: left;">Space of functions in <span
class="math inline">\(H^k(\Omega)\)</span> which equal zero on <span
class="math inline">\(\partial \Omega\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(H^1\)</span>空间</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span
class="math inline">\(H^{-1}\)</span></td>
<td style="text-align: left;">Dual space of <span
class="math inline">\(H^1\)</span></td>
<td style="text-align: left;"><span
class="math inline">\(H^1\)</span>的对偶空间</td>
</tr>
</tbody>
</table>
<h3 id="固体力学">固体力学</h3>
<table>
<colgroup>
<col style="width: 20%" />
<col style="width: 61%" />
<col style="width: 18%" />
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>Explanation</th>
<th style="text-align: left;">中文解释</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\boldsymbol \sigma\)</span></td>
<td>The Cauchy stress tensor</td>
<td style="text-align: left;">柯西应力张量</td>
</tr>
<tr class="even">
<td><span class="math inline">\(\mathbb{P}\)</span></td>
<td>the first Piola–Kirchhoff stress tensor</td>
<td style="text-align: left;">第一PK应力张量</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(W\)</span></td>
<td>Strain energy density function</td>
<td style="text-align: left;">应变能密度函数</td>
</tr>
<tr class="even">
<td><span class="math inline">\(E\)</span></td>
<td>Elastic potential energy function</td>
<td style="text-align: left;">弹性势能函数</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(?\)</span></td>
<td>Kinetic energy function</td>
<td style="text-align: left;">动能函数</td>
</tr>
<tr class="even">
<td><span class="math inline">\(B\)</span></td>
<td>A region in three-dimensional Euclidean point space(<span
class="math inline">\(\mathbb{R}^n\)</span>), called configuration of
<span class="math inline">\(\mathcal{B}\)</span></td>
<td style="text-align: left;">固体的构型</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(B_r\)</span></td>
<td>A specific configuration of <span
class="math inline">\(\mathcal{B}\)</span></td>
<td style="text-align: left;">参考构型</td>
</tr>
<tr class="even">
<td><span class="math inline">\(B_t\)</span></td>
<td>Current configutation of <span
class="math inline">\(\mathcal{B}\)</span></td>
<td style="text-align: left;">现时构型，当前构型</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\mathcal{B}\)</span></td>
<td>A body, considered as a set of elements, or particles, or material
points, whatever</td>
<td style="text-align: left;">固体</td>
</tr>
</tbody>
</table>
<table>
<colgroup>
<col style="width: 24%" />
<col style="width: 54%" />
<col style="width: 21%" />
</colgroup>
<thead>
<tr class="header">
<th><span class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span></th>
<th>bijection mapping between <span class="math inline">\(B_r\)</span>
and <span class="math inline">\(B_t\)</span></th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\mathbf{X}\)</span></td>
<td><span
class="math inline">\(\mathbf{X}=(X_1,X_2,X_3)\)</span>Coordinates of
material points at reference configuration</td>
<td>固体粒子在参考构型的坐标</td>
</tr>
<tr class="even">
<td>t</td>
<td>current time</td>
<td>当前时间</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(T\)</span></td>
<td>total time interval</td>
<td>时间间隔</td>
</tr>
</tbody>
</table>
<h3 id="浸没边界法">浸没边界法</h3>
<table>
<colgroup>
<col style="width: 40%" />
<col style="width: 50%" />
<col style="width: 8%" />
</colgroup>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\mathcal{S}(\mathbf{X},t)\)</span></td>
<td>prolongation operation, distribution operator</td>
<td>延拓算子</td>
</tr>
<tr class="even">
<td><span
class="math inline">\(\mathcal{J}(\mathbf{\mathbf{X}},t)\)</span></td>
<td>restriction operator, interpolation operator</td>
<td>插值算子</td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="完成文章的第二章">2023-03-10 16:40:37 完成文章的第二章</h2>
<p>图1描述了一物体<span
class="math inline">\(\mathcal{B}\)</span>在固定的背景区域<span
class="math inline">\(\Omega\)</span>中运动的过程。 物体 <span
class="math inline">\(\mathcal{B}\)</span>
所有质点空间坐标的集合称为其构型，记为<span
class="math inline">\(B\)</span>。<span
class="math inline">\(t\in[0,T]\)</span> 表示时间，<span
class="math inline">\(B_t\)</span> 表示固体 <span
class="math inline">\(\mathcal{B}\)</span> 在 <span
class="math inline">\(t\)</span>
时刻的构型，称为现时构型。对任意时间<span
class="math inline">\(t\)</span>，有唯一的构型<span
class="math inline">\(B_t\)</span>与之对应，这些构型的集合<span
class="math inline">\(\{B_t\}\)</span>称为物体<span
class="math inline">\(\mathcal{B}\)</span>在时间<span
class="math inline">\([0,T]\)</span>的运动。<span
class="math inline">\(\mathcal{B}_r\)</span>表示固体在<span
class="math inline">\(t=0\)</span>时刻的构型，称为参考构型。<span
class="math inline">\(\mathbf{X}\)</span>表示物体<span
class="math inline">\(\mathcal{B}\)</span>任一质点在参考构型中的空间坐标，<span
class="math inline">\(\mathbf{X}=\)</span> <span
class="math inline">\(\left(X_{1}, X_{2}, \ldots\right)\in B_{r} \subset
\mathbb{R}^{d}, d=2,3\)</span> ，称之为拉格朗日坐标。<span
class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span>是从<span
class="math inline">\(B_r\)</span>到<span
class="math inline">\(B_t\)</span>的映射，映射<span
class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span>称为固体从<span
class="math inline">\(\mathcal{B}_r\)</span>到<span
class="math inline">\(\mathcal{B}_t\)</span>的形变。<span
class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span>
是定义在参考构型 <span class="math inline">\(B_r\)</span>
上的物理量，以<span
class="math inline">\(\mathbf{X}\)</span>为自变量，我们称之为拉格朗日描述。区域<span
class="math inline">\(\Omega\)</span>表示流固耦合系统占据的物理区域，<span
class="math inline">\(\Omega/B_t\)</span>为流体区域，我们讨论定义在<span
class="math inline">\(\Omega\)</span>上的方程，不对流体区域进行单独描述。<span
class="math inline">\(\mathbf{x}\)</span>表示<span
class="math inline">\(\Omega\)</span>中的任意一点，<span
class="math inline">\(\mathbf{x}=\left(x_{1}, x_{2} \ldots\right)\in
\Omega \subset \mathbb{R}^{d}, d=2,3\)</span>，称之为欧拉坐标。<span
class="math inline">\(\mathbf{u}(\mathbf{x},t)\)</span>、<span
class="math inline">\(p(\mathbf{x},t)\)</span>分别表示流固耦合系统的速度场和压力场。</p>
<p>Figure 1 describes the motion of an body <span
class="math inline">\(\mathcal{B}\)</span> in a fixed background domain
<span class="math inline">\(\Omega\)</span>. The set of spatial
coordinates of all particles of body <span
class="math inline">\(\mathcal{B}\)</span> is called its configuration,
denoted by <span class="math inline">\(B\)</span>. <span
class="math inline">\(t\in[0,T]\)</span> represents time, <span
class="math inline">\(B_t\)</span> represents the configuration of body
<span class="math inline">\(\mathcal{B}\)</span> at time <span
class="math inline">\(t\)</span>, which is called the current
configuration. For any time <span class="math inline">\(t\)</span>,
there is a unique configuration <span class="math inline">\(B_t\)</span>
corresponding to it. The set of these configurations <span
class="math inline">\({B_t}\)</span> is called the motion of body <span
class="math inline">\(\mathcal{B}\)</span> during time <span
class="math inline">\([0,T]\)</span>. <span
class="math inline">\(B_r\)</span> denotes the configuration of the body
at <span class="math inline">\(t=0\)</span>, called the reference
configuration. <span class="math inline">\(\mathbf{X}\)</span>
represents the spatial coordinate of a specific particle in the
reference configuration of body <span
class="math inline">\(\mathcal{B}\)</span>, <span
class="math inline">\(\mathbf{X}=\left(X_{1}, X_{2}, X_{3}\right)\in
B_{r} \subset \mathbb{R}^{e}\)</span>, which is called the Lagrangian
coordinate. <span
class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span> is the mapping
from <span class="math inline">\(B_r\)</span> to <span
class="math inline">\(B_t\)</span>, which is called the deformation of
the body from <span class="math inline">\(B_r\)</span> to <span
class="math inline">\(B_t\)</span>. <span
class="math inline">\(\mathcal{X}(\mathbf{X},t)\)</span> is a physical
quantity defined on the reference configuration <span
class="math inline">\(B_r\)</span>. We call it the Lagrangian
description, with <span class="math inline">\(\mathbf{X}\)</span> as its
independent variable. The domain <span
class="math inline">\(\Omega\)</span> represents the physical domain
occupied by the fluid-solid coupling system. <span
class="math inline">\(\Omega/B_t\)</span> denotes the fluid domain. We
discuss equations defined on <span class="math inline">\(\Omega\)</span>
and do not separately describe the fluid domain. <span
class="math inline">\(\mathbf{x}\)</span> represents any point in <span
class="math inline">\(\Omega\)</span>, <span
class="math inline">\(\mathbf{x}=\left(x_{1}, x_{2}, x_{3}\right)\in
\Omega \subset \mathbb{R}^{3}\)</span>, which is called the Eulerian
coordinate.</p>
<p>假设固体和流体均不可压且密度相等，流体为牛顿流体，固体为粘超弹性固体，流固耦合系统的柯西应力张量为</p>
<p>Assuming that both the solid and fluid are incompressible and have
equal densities, the fluid is assumed to be a Newtonian fluid and the
solid is assumed to be a viscous hyperelastic material, then the Cauchy
stress tensor of the fluid-structure coupling system is given by <span
class="math display">\[
\boldsymbol{\sigma}(\mathbf{x},
t)=\boldsymbol{\sigma}^{\mathrm{f}}(\mathbf{x}, t)+
\begin{cases}\boldsymbol{\sigma}^{\mathrm{e}}(\mathbf{x}, t) &amp;
\mathbf{x} \in B_t \\ \mathbf{0} &amp;
\mathbf{x}\in\Omega/B_t\end{cases}
\]</span> Here are the meanings of the quantities and variables that
appear in the above equations in details. <span class="math display">\[
\boldsymbol{\sigma}^{\mathrm{f}}(\mathbf{x}, t)=-p(\mathbf{x}, t)
\mathbb{I}+\mu\left[\nabla \mathbf{u}(\mathbf{x}, t)+(\nabla
\mathbf{u}(\mathbf{x}, t))^{\mathrm{T}}\right]
\]</span></p>
<p><span class="math display">\[
\boldsymbol{\sigma}^{\mathrm{e}}(\mathbf{x},
t)=\boldsymbol{\sigma}^{\mathrm{e}}(\boldsymbol{\mathcal{X}}(\mathbf{X},
t), t)  = J^{-1}(\mathbf{X}, t)\mathbb{P}^{\mathrm{e}}(\mathbf{X},
t)\mathbb{F}^{\mathrm{T}}(\mathbf{X}, t)
\]</span></p>
<p><span class="math inline">\(\mathbb{I}\)</span>为单位张量，<span
class="math inline">\(\mu\)</span>为运动粘性，<span
class="math inline">\(\mathbb{F}(\mathbf{X},t)\)</span>为形变梯度，<span
class="math inline">\(J(\mathbf{X},
t)=\operatorname{det}(\mathbb{F}(\mathbf{X}, t))\)</span>，<span
class="math inline">\(\mathbb{P}(\mathbf{X},t)\)</span>为第一Piola-Kirchhoff应力张量，可以通过对应变能函数<span
class="math inline">\(W(\mathbb{F})\)</span>求导得到</p>
<p><span
class="math inline">\(\boldsymbol{\sigma}^{\mathrm{f}}(\mathbf{x},
t)\)</span> is the fluid-like component of stress tensor which exits
everywehre in <span class="math inline">\(\Omega\)</span>, <span
class="math inline">\(\mathbf{u}(\mathbf{x},t)\)</span> and <span
class="math inline">\(p(\mathbf{x},t)\)</span> represent the velocity
field and pressure field of the fluid-solid coupling system,
respectively. <span class="math inline">\(\mathbb{I}\)</span> is the
identity tensor, <span class="math inline">\(\mu\)</span> is the dynamic
viscosity. <span
class="math inline">\(\boldsymbol{\sigma}^{\mathrm{f}}(\mathbf{x},
t)\)</span> is the elastic component of stress tensor which only exists
in solid domain. <span
class="math inline">\(\mathbb{F}(\mathbf{X},t)\)</span> is the
deformation gradient, <span class="math inline">\(J(\mathbf{X},
t)=\operatorname{det}(\mathbb{F}(\mathbf{X}, t))\)</span>, and <span
class="math inline">\(\mathbb{P}(\mathbf{X},t)\)</span> is the first
Piola-Kirchhoff stress tensor, which can be obtained by taking the
derivative of the corresponding strain energy function <span
class="math inline">\(W(\mathbb{F})\)</span> <span
class="math display">\[
\mathbb{P}^{\mathrm{e}}=\frac{\partial W^{\mathrm{e}}}{\partial
\mathbb{F}}
\]</span>
浸没边界法的控制方程可以通过动量守恒定律和质量守恒定律推导。在求解中，<span
class="math inline">\(\boldsymbol{\sigma}^f(\mathbf{x},
t)\)</span>需采用欧拉描述，<span
class="math inline">\(\boldsymbol{\sigma}^{e}(\mathbf{x},
t)\)</span>需采用拉格朗日描述，它们之间通过与delta核函数的积分变换建立起联系。本文采用了Boyce等人推导的方程组。</p>
<p>The governing equations of the Immersed Boundary Method can be
derived from the principles of conservation of momentum and mass. When
we solve the problem practically, the fluid stress tensor <span
class="math inline">\(\boldsymbol{\sigma}^f(\mathbf{x}, t)\)</span> is
expressed in Eulerian description, while the solid stress tensor <span
class="math inline">\(\boldsymbol{\sigma}^{e}(\mathbf{x}, t)\)</span> is
expressed in Lagrangian description. The relationship between them is
established through integration with the delta kernel function.
Equations derived by Boyce et al. is adopted in this paper. <span
class="math display">\[
\rho(\frac{\partial \bf{u}}{\partial t}+(\bf{u}\cdot \nabla)\bf{u})
+\nabla p -\mu \Delta \bf{u} = \bf{f}
\]</span> <span class="math display">\[
\nabla\cdot \bf{u} = 0
\]</span> <span class="math display">\[
\int_{\bf{B}_{r}}\bf{F}\cdot \bf{V}d\bf{X} =-\int_{\bf{B}_{r}}\mathbb{P}
:\nabla \bf{V}d\bf{X}
\]</span> <span class="math display">\[
\bf{f}(x,t) = \int_{\bf{B}_{r}}
\bf{F}(\bf{X},t)\delta(x-\chi(\bf{X},t)d\bf{X}
\]</span> <span class="math display">\[
\frac{\partial{\chi (\bf{X,t})}}{\partial t}
=\int_{\Omega}\bf{u}(x,t)\delta (\chi (\bf{X},t)-x)dx
\]</span></p>
<h2 id="多孔介质固体的流固耦合">2023-03-11 01:26:50
多孔介质固体的流固耦合</h2>
<h3 id="灌注压力的求解">灌注压力的求解</h3>
<ul>
<li><span class="math inline">\(M_b\)</span>:常数</li>
<li><span
class="math inline">\(p\)</span>：是灌注压力，和流体的压力无关</li>
<li><span class="math inline">\(f(J)=\frac{2(J(\mathbf{X}, t)-1-\ln
(J(\mathbf{X}, t)))}{(J(\mathbf{X}, t)-1)^2}\)</span></li>
<li><span class="math inline">\(E(M,J)\)</span>:一个标量，与<span
class="math inline">\(m^n\)</span>和<span
class="math inline">\(J^n\)</span></li>
</ul>
<p><span class="math display">\[
\frac{P^{n+\frac{1}{2}}-P^n}{\triangle t / 2}-M_b f\left(J^n\right)
\nabla_{\mathbf{X}} \cdot\left(J^n \mathbb{F}^{-1} \mathbf{K}
\mathbb{F}^{-T} \nabla P^{n+\frac{1}{2}}\right)=E\left(M^n, J^n\right)
\]</span></p>
<p>在求解此方程之前，我们先考虑带矩阵系数的泊松方程。</p>
<h3 id="带矩阵系数的泊松方程">带矩阵系数的泊松方程</h3>
<p>带矩阵系数的泊松方程为： <span class="math display">\[
-\nabla \cdot(\boldsymbol{A}\nabla u) = f
\]</span> 其中，<span class="math inline">\(u\)</span>是未知函数，<span
class="math inline">\(f\)</span>是已知函数，<span
class="math inline">\(\boldsymbol{A}\)</span>是一个矩阵。其变分形式可以表示为：找到一个函数<span
class="math inline">\(u \in H^1(\Omega)\)</span>，满足下列变分问题：</p>
<p><span class="math display">\[
\int_{\Omega} \boldsymbol{A}\nabla u \cdot \nabla v \;dx =
\int_{\partial \Omega} A\nabla u\cdot \mathbf{n} v \;ds+\int_{\Omega} fv
\;dx \quad\forall \;v \in H^1(\Omega)
\]</span></p>
<p>其中<span class="math inline">\(\Omega\)</span>是定义域，<span
class="math inline">\(\partial \Omega\)</span>是<span
class="math inline">\(\Omega\)</span>的边界。若<span
class="math inline">\(g=A\nabla u\cdot
\mathbf{n}\)</span>为已知函数，则能求解。</p>
<h2 id="section-21">2023-03-11 12:21:22</h2>
<h3 id="算例1立方体膨胀-swelling-for-a-cube">算例1：立方体膨胀 swelling
for a cube</h3>
<p>背景区域：区域为 <span class="math inline">\(1 \times 1 \times 1
\mathrm{~cm}^3\)</span> ，网格剖分为 <span class="math inline">\(96
\times 96 \times 96\)</span> 。</p>
<h4
id="质疑背景区域和固体区域一样大么">质疑：背景区域和固体区域一样大么？</h4>
<p>固体的位移边界条件：<span
class="math inline">\(x=0,y=0,z=0\)</span>三个平面的法向位移为零。</p>
<p>源项：<span class="math inline">\(S=0\)</span>。</p>
<p>灌注压力：</p>
<ul>
<li><span
class="math inline">\(x=0\)</span>平面施加与时间相关的压力，<span
class="math inline">\(p_{\mathrm{bc}}=10^3\left(1-\exp \left(-t^2 /
0.25\right)\right)\)</span>。</li>
<li><span class="math inline">\(x=1\)</span>平面的压力恒为零。</li>
<li>其他平面为零Neumann边界条件。</li>
</ul>
<p>预期结果：</p>
<p>由于平面<span class="math inline">\(x=0\)</span>施加了空隙压力(pore
pressure)，立方体会像海绵一样膨胀。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202303111203631.jpg"
alt="立方体膨胀" />
<figcaption aria-hidden="true">立方体膨胀</figcaption>
</figure>
<h2 id="section-22">2023-03-11 12:21:44</h2>
<h3 id="代码位置-2">代码位置</h3>
<p>168394afa3200c5016eadc8bbfdf21b2b5b2d4cd</p>
<h3 id="参数-3">参数</h3>
<pre class="language-c++" data-language="c++"><code class="language-c++">int3 dim &#x3D; &#123;4, 4, 32&#125;;
dolfin::Point p2(0.45, 0.45, 0.1);
dolfin::Point p3(0.55, 0.55, 0.9);

double nu &#x3D; 0.01;
double rho &#x3D; 1.0;
double dt &#x3D; 0.000005;
int3 dim_bg &#x3D; &#123;65, 65, 65&#125;;
double3 dh_bg &#x3D; &#123;0.0, 0.0, 0.0&#125;;
double3 box_size_bg &#x3D; &#123;1.0, 1.0, 1.0&#125;;</code></pre>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># Constituitive parameters</span>
C <span class="token operator">=</span> <span class="token number">20000.0</span>  <span class="token comment"># dyn/cm^2 (2kPa)</span>
bf <span class="token operator">=</span> <span class="token number">8.0</span>
bt <span class="token operator">=</span> <span class="token number">2.0</span>
bfs <span class="token operator">=</span> <span class="token number">4.0</span>

kappa <span class="token operator">=</span> <span class="token number">1e1</span> <span class="token comment"># Penalty for incompressibility</span>
beta <span class="token operator">=</span> <span class="token number">1e7</span>  <span class="token comment"># Penalty for boundary conditions</span>

<span class="token comment"># Boundary markers</span>
bottom   <span class="token operator">=</span> <span class="token number">2</span>
fixed    <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment"># Pressure</span>
pressure <span class="token operator">=</span> <span class="token number">40</span></code></pre>
<h3 id="结果-1">结果</h3>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202303111224740.png"
alt="t=170*0.000005" />
<figcaption aria-hidden="true">t=170*0.000005</figcaption>
</figure>
<h3 id="数据-1">数据</h3>
<p>https://github.com/shaoyaoqian/shaoyaoqian.github.io/releases/download/20230221/position00017020230311122948.vtu</p>
<h3 id="问题-2">问题</h3>
<ol type="1">
<li>直杆没有向正上方偏移</li>
<li>参数kappa过大是否会导致直杆不会弯曲</li>
</ol>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Discretization parameter, proportional to the length of
the longest edge of an element in a partition of <span
class="math inline">\(\Omega\)</span><a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
  </entry>
  <entry>
    <title>2023年3月下旬</title>
    <url>/posts/60751/</url>
    <content><![CDATA[<div id="empty">

</div>
<span id="more"></span>
<h2 id="月22日220158-todo">03月22日22:01:58 TODO</h2>
<h3 id="中期报告中的算例">1. 中期报告中的算例</h3>
<p>总共有五个算例，先解决三个： #### 1.1. 方腔驱动圆球的速度边界条件</p>
<h3 id="多重网格求解器的边界条件">2. 多重网格求解器的边界条件</h3>
<h3 id="半拉格朗日方法实现对流项">3. 半拉格朗日方法实现对流项</h3>
<h3 id="带有源项的连续性方程">4. 带有源项的连续性方程</h3>
<h3 id="docker实现项目的部署">5. docker实现项目的部署</h3>
<h2 id="月23日152141">03月23日15:21:41</h2>
<h3 id="需要修改多重网格方法的接口">需要修改多重网格方法的接口</h3>
<h3 id="一维多重网格方法">15:48:32 一维多重网格方法</h3>
<ol type="1">
<li><p>零Dirichlet边界条件表现得很好。 commit:
03c900305a40cab2c6207ce045ab8a8445ccf335 <img data-src="https://githubimages.pengfeima.cn/images/202303231550672.png" /></p></li>
<li><p>非零Dirichlet边界条件只需要给初值精确施加边界条件，也表现得很好。
commit: 2d94d0dd677a9da65506f329893ac6d964941e87</p></li>
</ol>
<p><img data-src="https://githubimages.pengfeima.cn/images/202303231635219.png" /> 3.
更改限制算子后发现影响不大。 <img data-src="https://githubimages.pengfeima.cn/images/202303231643029.png" />
### 19:22:25 一维多重网格方法 Neumann 边界条件 commit:
4320082a229e382218260d84280772cbb20a0add ### 19:45:47 二维多重网格方法
Dirichlet 边界条件 commit: d7c7e58f1639f28bdd21df5ec4803c35c960d9c4</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202303231945600.png" /></p>
<h3 id="三维多重网格方法-dirichlet边界条件">23:02:59 三维多重网格方法
Dirichlet边界条件</h3>
<p>commit: ba699c8e4d3d484fe3610b5c37d64a2c8f942a68 <img data-src="https://githubimages.pengfeima.cn/images/202303232304730.png"
alt="image-20230323230419621" /></p>
<h2 id="年03月24日184911">2023年03月24日18:49:11</h2>
<p>commit: 0c19257a4cb08f344e97bf60173dc41948b7811d
纯NEUMANN边界的三维Poisson问题收敛效果不佳 <img data-src="https://githubimages.pengfeima.cn/images/202303241850376.png" /></p>
<h2 id="月27日111856">03月27日11:18:56</h2>
<p>泊松求解器现在存在的问题： 1.
带有Neumann边界的三维Poisson问题不收敛。当网格增加到129x129x129时，多重网格迭代不收敛。
2.
收敛速度慢。但是我看到一个别人写的，二维度Neumann问题，我觉得可能收敛。</p>
<h2 id="月29日095428-重大突破">03月29日09:54:28
<strong>重大突破</strong></h2>
<p> 多重网格算法调通了，Neumann边界条件和Dirichlet边界条件都能快速收敛，边界可以是混合边界条件。
TODO: 我需要写一个函数，遍历所有NEUMANN点。将的值赋予给额外点</p>
<h3 id="多重网格方法求解poisson方程的gpu加速">15:28:35
多重网格方法求解Poisson方程的GPU加速</h3>
<p>测试的 CPU 为 Intel(R) Xeon(R) Gold 6240 CPU @ 2.60GHz，GPU为 NVIDIA
Tesla V100 16GB ，网格单元数量为 <span
class="math inline">\(256^3\)</span> 未知量个数为 <span
class="math inline">\(3 \times 257^3\)</span> 。多重网格中最粗的网格为
9x9x9，迭代格式采用了红黑高斯塞德尔迭代，限制算子类型为half-weighted，延拓算子类型为trilinear。平均单次V-cycle的单核CPU计算时间为110.189秒，GPU计算时间为0.049秒，加速比约为2250，达到了明显的加速效果。</p>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
  </entry>
  <entry>
    <title>朱雀森林公园</title>
    <url>/posts/60075/</url>
    <content><![CDATA[<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306140852343.jpg"
alt="朱雀森林公园" />
<figcaption aria-hidden="true">朱雀森林公园</figcaption>
</figure>
<!-- <div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306140852343.jpg"
alt="朱雀森林公园" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306140846013.jpeg"
alt="石海" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306140844802.jpeg"
alt="冰晶顶" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306140848507.jpeg"
alt="山顶上的蓝天白云" /></div></div></div>
<p>--&gt;</p>
<!-- <iframe src="//player.bilibili.com/player.html?aid=838345990&bvid=BV1hg4y1i7tL&cid=194768979&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe> -->
<p>西安已经阴雨绵绵了半个月之久，六月十号是第一个放晴的周末。我和教研室的师弟师妹们总共六个人一起去朱雀森林公园爬山，最后登顶冰晶顶。当然，王璇也一起去了！🥰</p>
<span id="more"></span>
<p>冰晶顶旁边是一片松林，一棵棵松树就像一把把大伞，树下空间很大，我坐在里面给WX梳头。往常我会把头发一绺一绺地梳到手里，然后一把握住，绑个马尾，但是我觉得不绑头发更好看，于是我又把头发梳开，我们一边梳头一边自拍，以蓝天白云松林为背景。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306140846013.jpeg"
alt="石海" />
<figcaption aria-hidden="true">石海</figcaption>
</figure>
<p>后来下山的时候又经过石海。石海像是鹅卵石铺成的，只不过是放大了几百倍的鹅卵石，那些石头小的也有半米高，表面光秃秃的，得手脚并用才能爬下去。王璇说我走得不稳，叫我小心点，走后面，慢慢走。可我走起来并没有觉得难，弯着腰爬实在太累，我就直起身子，在石头表面走，也挺稳的，走到边缘处，便从一块石头跳到另一块石头。</p>
<p>走着走着，WX很快就落在了后面，我回过头去，看见她正在为如何下山发愁，我就来到了她身边。</p>
<p>"不用管我，你自己先下去吧。" "别碰我，待会儿咱们两个人都摔了。"</p>
<p>我没有碰她，走在了她前面带路，不再在石头上乱跑。走出石海，到台阶上，我抱了抱她，她埋怨了几句，前面有个人都手臂擦伤了，你还乱跑。</p>
<p>到了草甸，我们坐了下来。周围人很多，很热闹，我们靠坐在一起，摆了摆姿势，变着花样自拍。风很大，她发丝飞扬。蓝天白云，阳光明媚，草地就像波光粼粼的湖面。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306140844802.jpeg"
alt="冰晶顶" />
<figcaption aria-hidden="true">冰晶顶</figcaption>
</figure>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306140848507.jpeg"
alt="山顶上的蓝天白云" />
<figcaption aria-hidden="true">山顶上的蓝天白云</figcaption>
</figure>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>爬山</tag>
      </tags>
  </entry>
  <entry>
    <title>小电驴购买记</title>
    <url>/posts/59919/</url>
    <content><![CDATA[<p>不要为想象中可能存在，但眼下尚未出现的需求埋单 <span id="more"></span></p>
<h1 id="电动自行车的选购">电动自行车的选购</h1>
<p>作为遵纪守法的好公民，购买电动自行车前最重要的是看一看相关的法律法规。法律法规中最重要的是关于<strong>电动自行车</strong>和<strong>电动摩托车</strong>的界定，电动自行车不需要摩托车牌照，也不需要摩托车驾照。</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202306150954262.png" style="zoom:25%;" /></p>
<p>其次要看电动车的续航。以身边的同学为例，徐娟花了¥600买了一辆二手电动车，花了¥450换了电池。电池容量是48伏12安时，按照她的说法，在夏天可以连续骑行15天不用充电，续航里程大约为40～50公里。</p>
<p>由于电动自行车的重量受到限制，铅酸蓄电池一般为48伏12安时，48伏16安时，价格约为¥1499，¥1999，续航为45公里，60公里。锂电池版本的电动自行车才能满足长续航的要求，电量最高可达48伏26安时，例如以下两款，价格分别为¥3099和¥3799。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306151015780.png"
alt="价格3099，电池容量为48伏20安时，官方给出的续航为70公里" />
<figcaption
aria-hidden="true">价格3099，电池容量为48伏20安时，官方给出的续航为70公里</figcaption>
</figure>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306151015811.png"
alt="价格3799，电池容量为48伏26安时，官方给出的续航为100公里" />
<figcaption
aria-hidden="true">价格3799，电池容量为48伏26安时，官方给出的续航为100公里</figcaption>
</figure>
<h1 id="注册登记">注册登记</h1>
<p>最后是注册登记，需要先关注公众号，在公众号里预约。</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202306151002828.png" alt="公众号" style="zoom:25%;" />
<img data-src="https://githubimages.pengfeima.cn/images/202306151044487.png" alt="收费标准" style="zoom:25%;" />
<img data-src="https://githubimages.pengfeima.cn/images/202306150949631.jpg" alt="挂牌政策" style="zoom:33%;" /></p>
<p>我的小电驴于6月15号到货，走的是京东大件物流。那日午后，王璇正趴在桌上睡觉，我在旁边学习，忽然来了电话，物流师傅说电动车已经送到了自动化学院的后门，准备给我就地安装。我接了电话后就去找了物流师傅。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202306190108254.JPG"
alt="小电驴安装" />
<figcaption aria-hidden="true">小电驴安装</figcaption>
</figure>
<p>王璇上课去了，我自己去体验一下这辆电动车，我先去了一趟学校的东南角，然后友去学校西北角，顺便和常海粟一起去星H拿了一个座套。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190111029.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190110579.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190110534.jpeg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190111462.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190110517.jpeg" /></div></div></div>
<p class="image-caption">
歼轰7
</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202306190112892.jpeg" alt="星H的猫" style="zoom: 10%;" /></p>
<p>买了小电驴后，最大的快乐莫过于带上女朋友去兜风。我在王璇上课的教学楼门口等她，她下来以后我门就开始逛校园。她坐在我后面，双手环抱住我的腰，小脑袋贴着我的后背。她说：“我坐我爸摩托车的时候都只是捏着我爸腰间的衣服，坐在你后面的时候就非常自然地抱着你了。“</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202306190114046.PNG" alt="校园足迹" style="zoom: 30%;" /></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190124408.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190124209.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190124201.jpeg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190125529.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190126348.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190125517.jpeg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190125549.jpeg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306190126751.jpeg" /></div></div></div>
<p class="image-caption">
启翔湖
</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>我有一个漂亮的女朋友</title>
    <url>/posts/42969/</url>
    <content><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152025509.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024158.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024001.JPG" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024132.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024062.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024391.JPG" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024029.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024102.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024355.JPG" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024439.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024719.JPG" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024726.JPG" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152024839.JPG" /></div></div></div>
<p class="image-caption">
大唐不夜城
</p>
<span id="more"></span>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242612.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242589.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242666.jpg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242450.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242688.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152243274.jpg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242382.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242599.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242398.jpg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242234.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242455.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242094.jpg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152243681.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202306152242384.jpg" /></div></div></div>
<p class="image-caption">
连云港
</p>
]]></content>
  </entry>
  <entry>
    <title>秦PLUS日常使用油电消耗统计</title>
    <url>/posts/37773/</url>
    <content><![CDATA[<div>
<canvas id="myChart">
</canvas>
</div>
<span id="more"></span>
<h3 id="购车经验"><strong>购车经验</strong></h3>
<p>我购买的秦PLUS为 <strong>2023款 冠军版 DM-i
120KM领先型</strong>，裸车价格125800元，西安造字台附近的比亚迪新景腾飞4S店购买，价格无优惠。</p>
<p>销售通过易车APP获取我的电话，于6月30号上午给我打电话。销售告诉我，这个月月底冲业绩，今天购车可送我八次保养，免上牌费，送底盘装甲，可当天提车。下午我和WX就去他们店里看车，结果销售说上牌费不能免。我想提车，不想再到处跑，折腾购车相关的事情，没有去其他4S店看车，就付钱提车了。</p>
<p>以后可能还会买车，需要注意的点： 1.
贴膜。原厂送的膜质量很差，如果想换膜，可以在买车前跟销售谈换膜的价格，别贴膜的时候被忽悠到交钱了。我去贴膜的时候被告知，换成<strong>康得新膜</strong>或者<strong>龙膜</strong>要一千多，我没有掏钱，只贴了原厂送的膜。
2.
保险。4S店里卖保险的人介绍保险的时候，将出行险和座位险混为一谈，声称能保62万。事实上，62万中的60万属于车主的出行险，价格715元，只保车主不保乘客。销售还推荐了一个不知名的险种，能够放大赔偿金额，没必要购买。
3.
延保。花三千多延长保修到8年，与机械部件不同，电子元器件的故障率随着使用年限增长而降低，有问题的部件会在保修期内损坏坏，保修期内没坏的大概率能使用到汽车报废。
4.
价格。现在汽车价格公开透明，但8月份是汽车销售淡季，汽车的资金占用成本和库存成本很高，降价是必然的。我买的这款车并不缺现车，我提的车为三月份生产，六月底卖出，期间存放了三个多月。如果在8月18日购车，会有3000元购车优惠，950元交强险优惠。</p>
<p>总之，一定要有耐心，一定要把各个事项问清楚，慎重交款，交款之前主动权还是在自己这边的，交款之后再谈会很被动。交钱后发现保险和销售说的不一样，可以退保。</p>
<p>我决定购买这辆车时，已接受了它的缺点： 1.
<strong>底盘硬</strong>，走烂路不舒服 2.
在易车十万里长测中能看到，保险杠连接处会<strong>生锈</strong> 3.
长城举报比亚迪没有使用<strong>高压油箱</strong>，蒸发不达标 4.
<strong>EV受限</strong>，不能长期亏电行驶</p>
<p>以后有钱了要买安全系数高的车，非承载车身，吨位大，新，铝合金/热处理钢，防撞梁高度高，抗翻滚能力高。</p>
<h4 id="赠品"><strong>赠品</strong></h4>
<ul>
<li>八次保养(约¥200/次)</li>
<li>贴膜(约¥1000)</li>
<li>底盘装甲(约¥1000) 赠品总价值约为
¥3600。贴膜的时候原厂贴膜可以换成<strong>康得新膜</strong>或者<strong>龙膜</strong>，抵掉原厂送的贴膜，需要加价一千多。
#### <strong>其他消费</strong></li>
<li>上牌费(¥500)</li>
<li>行车记录仪(¥303)</li>
<li>后备箱垫(¥50<strong>还没买</strong>)</li>
<li>放电枪(¥333)</li>
<li>抱枕(¥80) 总共 ¥1783 #### <strong>保险</strong></li>
<li>交强险 950</li>
<li>车辆损失险 2600</li>
<li>第三方200万 950</li>
<li>乘客2万 55</li>
<li>司机2万 22</li>
<li>出行险 715 总共 ¥ 5361，以后可以免去或减少出行险的保额。 ####
<strong>轮胎型号</strong> 原厂轮胎为<strong>佳通 215/55 R17 94V
F22</strong>，换过一个轮胎，总共¥480。 补胎:
蘑菇钉，60元，忘了叫他给轮胎做动平衡。 ## <strong>购物清单</strong></li>
</ul>
<ol type="1">
<li><p>车载吸尘器(¥199)</p></li>
<li><p>无线洗车机机(¥369)</p></li>
<li><p>玻璃水</p></li>
<li><p>户外桌椅(¥104)</p></li>
<li><p>天幕帐篷(¥105)</p></li>
<li><p>防潮垫</p></li>
<li><p>吊床(¥39)</p></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>IB方法的时间离散格式</title>
    <url>/posts/52922/</url>
    <content><![CDATA[<p>IB方法的时间离散格式主要有 Backward Euler 格式和 Crank-Nicolson
格式。</p>
<span id="more"></span>
<p><span class="math display">\[
\rho(\frac{\partial\textbf{u}}{\partial
t}+\textbf{u}\cdot\nabla\textbf{u})+\nabla
p-\mu\Delta\textbf{u}=\textbf{f}\\
\nabla\cdot{\textbf{u}}=0\\
\int_{B_{r}}\textbf{F}\cdot\textbf{V}d\textbf{X}=-\int_{B_{r}}\mathbb{P}
:\nabla\textbf{V}d\textbf{X}\\
\textbf{f}(\textbf{x},t)=\int_{B_{r}}\textbf{F}(\textbf{X},t)\delta(x-\chi(\textbf{X},t))dx\\
\frac{\partial\chi(\textbf{X},t)}{\partial
t}=\int_{\Omega}\textbf{u}(\textbf{x},t)\delta(\chi(\textbf{X},t)-\textbf{x})d\textbf{x}
\]</span></p>
<h3 id="backward-euler格式">Backward Euler格式</h3>
<ol type="1">
<li><p>利用<span class="math inline">\(\chi^{n}\)</span>，更新<span
class="math inline">\(\mathcal{J}(\chi^{n})\)</span>和<span
class="math inline">\(\mathcal{S}(\chi^{n})\)</span></p></li>
<li><p>利用FEniCS求解<span
class="math inline">\(\textbf{F}(\chi^{n})\)</span></p></li>
<li><p>计算 <span class="math display">\[
\textbf{f}^{n}=\mathcal{S}(\chi^{n})\textbf{F}(\chi^{n})
\]</span></p></li>
<li><p>求解 N-S 方程，<font color=red>时间离散使用一阶格式</font> <span
class="math display">\[
\rho(\frac{\mathbf{u}^{n+1}-\mathbf{u}^{n}}{\Delta
t}+\textbf{A}^{n+\frac{1}{2}})=-\nabla_{h}p^{n}+\mu\nabla^{2}_{h}\textbf{u}^{n+1}+\mathbf{f}^{n}\\
\nabla_{h}\cdot \mathbf{u}^{n+1}=0
\]</span></p></li>
<li><p>更新<span class="math inline">\(\chi^{n+1}\)</span> <span
class="math display">\[
\frac{\chi^{n+1}-\chi^{n}}{\Delta
t}=\mathcal{J}(\chi^{n})\textbf{u}^{n+1}
\]</span></p></li>
</ol>
<h3 id="crank-nicolson格式">Crank-Nicolson格式</h3>
<ol type="1">
<li><p>利用<span class="math inline">\(\chi^{n}\)</span>,更新<span
class="math inline">\(\mathcal{J}(\chi^{n})\)</span>,<span
class="math inline">\(\mathcal{S}(\chi^{n})\)</span></p></li>
<li><p><font color=red>更新位移<span
class="math inline">\(\chi^{n+\frac{1}{2}}\)</span></font></p></li>
</ol>
<p><span class="math display">\[
\frac{\chi^{n+\frac{1}{2}}-\chi^{n}}{\Delta
t/2}=\mathcal{J}(\chi^{n})\textbf u^{n}
\]</span></p>
<ol start="3" type="1">
<li><p>同时更新插值算子和延拓算子 <span
class="math inline">\(\mathcal{J}(\chi^{n+\frac{1}{2}})\)</span> 和
<span class="math inline">\(\mathcal{S}(\chi^{n+\frac{1}{2}})\)</span>
，<strong>以此保证插值算子和延拓算子是对偶的对偶性</strong></p></li>
<li><p>利用FEniCs求解<span
class="math inline">\(\textbf{F}(\chi^{n+\frac{1}{2}})\)</span> <span
class="math display">\[
\int_{B_{r}}\textbf{F}^{n+\frac{1}{2}}\cdot\textbf{V}d\textbf{X}=-\int_{B_{r}}\mathbb{P}(\textbf{X}^{n+\frac{1}{2}})
:\nabla\textbf{V}d\textbf{X}\\
\]</span></p></li>
<li><p>不需要更改，因为修改<span
class="math inline">\(\mathcal{J}(\chi^{n+\frac{1}{2}})\)</span>后这里自动修改</p></li>
</ol>
<p><span class="math display">\[
\textbf{f}^{n+\frac{1}{2}}=\mathcal{S}(\chi^{n+\frac{1}{2}})\textbf{F}(\chi^{n+\frac{1}{2}})\\
\]</span></p>
<ol start="6" type="1">
<li>求解N-S方程</li>
</ol>
<p><span class="math display">\[
\rho(\frac{u^{n+1}-u^{n}}{\Delta
t}+\textbf{A}^{n+\frac{1}{2}})=-\nabla_{h}p^{n+\frac{1}{2}}+\mu\nabla^{2}_{h}(\frac{\textbf{u}^{n+1}+\textbf{u}^{n}}{2})+\textbf{f}^{n+\frac{1}{2}}\\
\nabla_{h}u^{n+1}=0
\]</span></p>
<p>​ 其中<span
class="math inline">\(\textbf{A}^{n+\frac{1}{2}}=\frac{3}{2}\textbf{u}^{n}\cdot\nabla_{h}\textbf{u}^{n}-\frac{1}{2}\textbf{u}^{n-1}\cdot\nabla_{h}\textbf{u}^{n-1}\)</span></p>
<ol start="7" type="1">
<li>更新<span class="math inline">\(\chi^{n+1}\)</span></li>
</ol>
<p><span class="math display">\[
\frac{\chi^{n+1}-\chi^{n}}{\Delta
t}=\mathcal{J}(\chi^{n+\frac{1}{2}})(\frac{\textbf{u}^{n+1}+\textbf{u}^{n}}{2})\\
=\frac{1}{2}(\mathcal{J}(\chi^{n+\frac{1}{2}})\textbf{u}^{n+1}+\mathcal{J}(\chi^{n+\frac{1}{2}})\textbf{u}^{n})\\
=\frac{1}{2}(\textbf{U}^{n+1}+\textbf{U}^{n})
\]</span></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/posts/1/</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>网站收集</title>
    <url>/posts/49572/</url>
    <content><![CDATA[<p>我平时收集的一些网站。</p>
<span id="more"></span>
<iframe src="https://wangxuan.mapengfei.cn/web" width="800" height="5000" frameborder="0">
</iframe>
<pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://wangxuan.mapengfei.cn/web<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5000<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre>
]]></content>
  </entry>
  <entry>
    <title>2023年十一月上旬科研日志</title>
    <url>/posts/10083/</url>
    <content><![CDATA[<p>十一月份最主要的任务是完成第一篇文章的初稿。 <span id="more"></span> ##
2023-11-06 11:54</p>
<h3 id="暂时先用-lbfgs-方法求解非线性问题">暂时先用 LBFGS
方法求解非线性问题</h3>
<p>用下面的运算符重载来表达残差公式
<code>Y = X - _solid_displacement - dt * U</code>
的计算。此函数需要返回两个对象，一个是grad，一个目标函数 <span
class="math inline">\(f=\|\mathbf{Y}\|_2\)</span> 。需要注意的是，<span
class="math inline">\(f\)</span> 关于 <span
class="math inline">\(\mathbf{X}\)</span> 的导数并不是 <span
class="math inline">\(\mathbf{Y}\)</span> 。</p>
<pre class="language-C++" data-language="C++"><code class="language-C++">double operator()(const Eigen::VectorXd &amp;x, Eigen::VectorXd &amp;grad)</code></pre>
<p>在这个函数内部需要完成以下这些事情 1. 将 x 转换成
<code>std::vector&lt;double3&gt;</code> 类型 2. 调用
<code>calculate_solid_velocity(X, U);</code> 3.
<code>Y = X - _solid_displacement - dt * U;</code> 4. 将 Y 转换回
<code>Eigen::VectorXd</code> 类型 5. 计算 Y 的二范数</p>
<h3 id="下载-lbfgspp-代码">下载 LBFGSpp 代码</h3>
<p>lbfgspp
是一个仅有头文件的库，它依赖Eigen。因为我们的dolfin等库已经使用了eigen，因此没必要再在lbfgspp中再使用一次Eigen。因此需要在cmake文件中注释掉下面几行代码。</p>
<pre class="language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">find_package</span><span class="token punctuation">(</span>Eigen3 <span class="token number">3.0</span> REQUIRED<span class="token punctuation">)</span>
<span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>lbfgspp <span class="token namespace">INTERFACE</span> <span class="token inserted class-name">Eigen3::Eigen</span><span class="token punctuation">)</span>
<span class="token keyword">message</span><span class="token punctuation">(</span><span class="token string">"-- Eigen3 version: "</span> <span class="token punctuation">$&#123;</span>EIGEN3_VERSION_STRING<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre>
<h2 id="中午休息">2023-11-06 12:31 中午休息</h2>
<h2 id="section">2023-11-06 13:46</h2>
<h3 id="查看理想左心室舒张算例结果">查看理想左心室舒张算例结果</h3>
<p>程序中断了，查看结果发现</p>
<h3 id="左心室算例">左心室算例</h3>
<p>显格式的真实左心室和理想左心室舒张都重新放上去跑了。理想左心室还未跑到终止时刻程序就断了。和论文中结果进行比较，论文中心室在中轴线上的中点的位置为-26.5--27.5之间，在参数还未调对之前，我算出来的位移为0.72左右，换算一下为30.7左右，因此，未达到稳定状态时，心室的膨胀程度比论文中的结果大。需要继续运行程序，等程序几乎达到稳定状态再看结果。此外，还需要缩小时间步长，增大顶端的固定系数。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202311071601927.png"
alt="image-20231107160116830" />
<figcaption aria-hidden="true">image-20231107160116830</figcaption>
</figure>
<p><img data-src="https://githubimages.pengfeima.cn/images/202311071558615.png" alt="image-20231107155840478" style="zoom:33%;" /></p>
<p>真实左心室形变后变得非常粗糙，因为误差太大导致的。主要有两个原因：</p>
<ol type="1">
<li>时间不长太大导致不稳定</li>
<li>流体网格步长太大导致误差太大</li>
</ol>
<h2 id="周汇报">2023-11-08 16:00 周汇报</h2>
<h3 id="近期数值模拟结果">近期数值模拟结果</h3>
<h4 id="真实左心室">真实左心室</h4>
<p>真实左心室的拟静态模拟，先整体膨胀，后心尖收缩，再膨胀，如此反复。
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081603636.jpg"
alt="0.00s" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081604526.jpg"
alt="0.38s" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081604113.jpg"
alt="1.18s" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081604493.jpg"
alt="1.41s" /></div></div></div></p>
<h4 id="理想左心室">理想左心室</h4>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081618765.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081615884.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081616160.png" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311081617795.png" /></div></div></div>
<h4 id="直杆模拟">直杆模拟</h4>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011410159.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011414694.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011408664.png" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011408083.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011402038.jpg" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011401933.jpg" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202311011400437.jpg" /></div></div></div>
<h2 id="section-1">2023-11-13 18:45</h2>
<h3 id="近期任务">近期任务</h3>
<ol start="0" type="1">
<li>直杆弯曲的算例(时间步长0.001)
<ul>
<li>用显格式跑100s，保存10000个数据。</li>
<li>用隐格式跑100s，保存10000个数据。</li>
</ul></li>
<li>真实左心室算例网格
<ol type="1">
<li>时间步长不够小(1/32)</li>
<li>背景网格的空间步长不够小(0.001s)</li>
<li>还未达到稳态(10s)</li>
</ol></li>
<li>理想左心室的几何形状有问题，应当选取椭球更长的那半截</li>
<li>二维理想弹性圆环的算例
<ol type="1">
<li>计算能量</li>
<li>计算压强p的收敛阶(需要考虑流体网格、固体网格、时间不长三者)</li>
<li>计算速度u的收敛阶(速度应该为零)</li>
<li>要不要考虑椭圆形？</li>
</ol></li>
<li>将箱型迭代法考虑进心肌灌注问题的求解</li>
<li>三维流体的优化(未来一两周的规划)
<ol type="1">
<li>多重网格</li>
<li>重写 GPU 加速</li>
</ol></li>
<li>二维算例代码重构
<ol type="1">
<li>二维流体求解器应当独立出来</li>
<li>流体数据的输出应当统一起来</li>
<li>在看了压强的结果之后，计算压强的误差</li>
<li>ibm 也应该独立出来</li>
</ol></li>
</ol>
<h2 id="boxsmothing">2023-11-13 16:11 BOXSMOTHING</h2>
<p>稳态stokes方程的求解结果<a href="#fn1" class="footnote-ref"
id="fnref1"
role="doc-noteref"><sup>1</sup></a>和非稳态stokes方程的求解结果<a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>作为标准验证流体求解器是否正确。被王璇骂了一顿，她觉得她自己代码是对的，为什么要注释掉！！！
### 箱型迭代法
为了下午的组会，我们快速地构造出了一个算例，基于方腔驱动流，顶盖外法向速度的梯度为零，压强为零。</p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>https://gist.github.com/shaoyaoqian/664fb1ba512f802baa8a8643d8325a79<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn2"><p>https://gist.github.com/shaoyaoqian/c62a8014e3875967d763fd98022c7e72<a
href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
  </entry>
  <entry>
    <title>直管二尖瓣模拟日志</title>
    <url>/posts/21745/</url>
    <content><![CDATA[<p>将直管二尖瓣模型模拟缺血性返流的研究作为第二篇文章。</p>
<span id="more"></span>
<ol type="1">
<li><p>瓣膜打开状态可以正确模拟。 <div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405041611537.png"
alt="0.0601s" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405041611514.png"
alt="0.1001s" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405041611522.png"
alt="0.1401s" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405041611707.png"
alt="0.1851s" /></div></div></div></p></li>
<li><p>0.185秒，瓣膜开始闭合，需在出口处对流体施加反馈力，阻止流体流动。</p>
<p>有如下问题：</p>
<ol type="1">
<li>时间步长缩小为原来的1/10。</li>
<li>如果直管外也施加反馈力，那么程序只能运行到0.06s。</li>
</ol></li>
</ol>
<p>在出口处设置反馈力可以使速度下降。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405071059114.png" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202405071059878.png" /></div></div></div>
<p>5月11日-5月15日</p>
<p>程序上没有什么改动。</p>
<h3 id="月23日-生成二尖瓣环扩张的网格">5月23日
生成二尖瓣环扩张的网格</h3>
<p>生成MV网格的过程比较复杂, 分为两轮。</p>
<h4 id="第一轮程序的前缀为数字">第一轮(程序的前缀为数字)</h4>
<ol type="1">
<li>运行 <code>1_read_mesh.py</code> 生成 <code>boundaries.xml</code>
<code>material.xml</code> <code>mesh.xdmf</code>
<code>mesh.h5</code>文件。</li>
<li>运行 <code>2_read_fibers.p</code> 生成 <code>fiblers_0.xml</code>
<code>fiblers_1.xml</code> <code>fiblers_2.xml</code></li>
<li>运行 <code>3_remark_mesh.py</code> 生成
<code>materials_remarked.xml</code>
<code>boundaries_remarked.xml</code>,
这一步主要是区分出前后乳头肌。</li>
<li>运行 <code>_f_4_scale_mesh.py</code> 生成
<code>mesh_scale.xdmf</code> 和 <code>mesh_scale.h5</code>,
这里报错不用管，因为<code>mesh_connected.xdmf不存在</code>。</li>
<li>运行 <code>fsi_real_MV_dilation</code> 模拟二尖瓣环的扩张。</li>
</ol>
<h4 id="第二轮程序的前缀为字母">第二轮(程序的前缀为字母)</h4>
<p>在运行程序 <code>fsi_real_MV_dilation</code> 后生成了
<code>process.xdmf</code> 文件, 文件中保存着瓣膜的位移信息。 1. 运行
<code>_a_modify_mesh.py</code> , 生成 <code>mesh_dilation.xdmf</code>
文件, 为扩张后的二尖瓣(仅有瓣膜叶和腱索)。 2. 运行
<code>_b_identify_boundary.py</code>, 提取出瓣膜叶边缘的坐标。 3. 运行
<code>c_generate_disk.py</code>, 生成圆盘。 4. 运行
<code>d_generate_tube.py</code>, 生成直管。 5. 运行
<code>e_connect_meshes.py</code>, 连接网格,
<code>fibers_0_connected.xml</code>,
<code>materials_connected.xml</code>,<code>mesh_connected</code>.xdmf,
boundaries_connected.xml 6. 运行 <code>_f_4_scale_mesh.py</code> 生成
<code>mesh_connected_scale.xdmf</code> 和
<code>mesh_connected_scale.h5</code>网格。</p>
<h3 id="月24日-调慢二尖瓣环扩张的速度">5月24日
调慢二尖瓣环扩张的速度</h3>
<p>调慢不起作用</p>
<h3 id="月25日-重新npuheart的环境">5月25日 重新NPUHeart的环境</h3>
<p>遇到一个无法解决的错误，可能是mpi的问题，也可能是网格的问题，希望通过重新配置环境，排除运行环境的问题，此版本移除了openmp的依赖，并且不指定固定版本的openmpi。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890 <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890 <span class="token assign-left variable">all_proxy</span><span class="token operator">=</span>socks5://127.0.0.1:7890
<span class="token function">git</span> clone <span class="token parameter variable">-c</span> <span class="token assign-left variable">feature.manyFiles</span><span class="token operator">=</span>true https://github.com/spack/spack.git
<span class="token function">git</span> clone git@github.com:npuheart/npuheart.git
<span class="token function">scp</span> <span class="token parameter variable">-r</span> kokkos@127.0.0.1:~/spack/var/spack/cache ~/spack/var/spack/
<span class="token builtin class-name">.</span> ~/spack/share/spack/setup-env.sh
spack compiler <span class="token function">find</span>
spack <span class="token function">install</span> gcc@11.4.0
spack load gcc
spack compiler <span class="token function">find</span>
spack <span class="token function">env</span> create fenics_kokkos
spack <span class="token function">env</span> activate fenics_kokkos <span class="token parameter variable">-p</span>
code ~/spack/var/spack/environments/fenics_kokkos/spack.yaml <span class="token comment"># 复制下面内容</span>
spack concretize <span class="token parameter variable">-f</span>
spack <span class="token function">install</span></code></pre>
<pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># NOTE: 此版本移除了openmp的依赖，并且不指定固定版本的openmpi</span>
<span class="token comment"># 通过 gcc@11.4.0 能够编译成功</span>
<span class="token key atrule">spack</span><span class="token punctuation">:</span>
  <span class="token key atrule">specs</span><span class="token punctuation">:</span>
  <span class="token comment"># - cuda@12.2.1 +allow-unsupported-compilers # V12.3.52</span>
  <span class="token punctuation">-</span> kokkos<span class="token punctuation">-</span>kernels@master +cuda cuda_arch=89 %gcc@11.4.0
  <span class="token punctuation">-</span> kokkos@master +cuda +cuda_lambda +cuda_constexpr +wrapper cuda_arch=89 cxxstd=20
  <span class="token comment"># FEniCS</span>
  <span class="token punctuation">-</span> fenics@2019.1.0.post0 +zlib build_type=Release cflags="<span class="token punctuation">-</span>O3" 
  <span class="token punctuation">-</span> petsc@3.14.0 +mumps +hdf5
  <span class="token punctuation">-</span> boost@1.71.0
  <span class="token punctuation">-</span> python@3.10.10 +optimizations
  <span class="token punctuation">-</span> py<span class="token punctuation">-</span>matplotlib
  <span class="token comment"># NPUHeart</span>
  <span class="token punctuation">-</span> muparser <span class="token comment"># 2.3.4</span>
  <span class="token punctuation">-</span> fmt@10.1.1
  <span class="token punctuation">-</span> nlohmann<span class="token punctuation">-</span>json@3.11.2
  <span class="token key atrule">view</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">concretizer</span><span class="token punctuation">:</span>
    <span class="token key atrule">unify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

  <span class="token key atrule">packages</span><span class="token punctuation">:</span>
    <span class="token key atrule">all</span><span class="token punctuation">:</span>
      <span class="token key atrule">compiler</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>gcc@11.4.0<span class="token punctuation">]</span></code></pre>
<blockquote>
<p>注意：FEniCS 依赖 suite-sparse@5.13.0 ，spack安装默认版本
suite-sparse@7.3.1 时出错。</p>
</blockquote>
<h3 id="月28日">5月28日</h3>
<h5 id="重新计算二尖瓣环扩张后的网格">重新计算二尖瓣环扩张后的网格</h5>
<ol type="1">
<li>当时间步为20000的时候，t=0.045时程序中断，半径大约扩大了0.24cm，程序终中断了。</li>
</ol>
<p><img data-src="https://githubimages.pengfeima.cn/images/202405280035858.jpg" alt="Xnip2024-05-28_00-34-53" style="zoom:25%;" /></p>
<ul class="task-list">
<li><p><label><input type="checkbox"
checked="" />为控制的扩张时间为t_start_closing，因此，需要在输入参数中增加该参数，从0.185调到0.5，让流体速度尽可能小。</label></p></li>
<li><p><label><input type="checkbox"
checked="" />现在我需要跑不同的程序，半径扩大范围<span
class="math inline">\(\{0.1,0.2,0.3,0.4,0.5\}\)</span>，输入参数中也应增加该参数。</label></p></li>
<li><p><label><input type="checkbox"
checked="" />输出路径包含上述两个参数。</label></p></li>
</ul>
<h5 id="二尖瓣的程序需要进行如下微调">二尖瓣的程序需要进行如下微调</h5>
<ul class="task-list">
<li><label><input type="checkbox"
checked="" />前、后乳头肌的位移需要作为参数</label></li>
<li><label><input type="checkbox"
checked="" />扩张后的网格存储在不同的文件中，文件名作为参数</label></li>
<li><label><input type="checkbox"
checked="" />需要一个脚本，批量输出配置文件，并自动运行程序的执行命令</label></li>
<li><label><input type="checkbox"
checked="" />json文件作为读入参数</label></li>
<li><label><input type="checkbox" />计算流量</label></li>
<li><label><input
type="checkbox" />将material输出到view.xdmf中</label></li>
</ul>
<h5 id="二尖瓣环扩张的运行结果">二尖瓣环扩张的运行结果</h5>
<ul>
<li><p>t_start_closing=0.185 好像可以算扩张半径0.1和0.2的问题。</p></li>
<li><p>t_start_closing=0.3 时，可以扩张到 0.24504999999998117</p></li>
<li><p>t_start_closing=0.6 时，可以扩张到 0.2437749999999772</p>
<p>所以，要让扩张半径为 0.3 ，最重要的参数应该是时间步长。</p></li>
</ul>
<p><img data-src="https://githubimages.pengfeima.cn/images/202405291715598.png" alt="image-20240529171555443" style="zoom:25%;" /></p>
<h3 id="月29日">5月29日</h3>
<ul class="task-list">
<li><label><input
type="checkbox" />增加算例，二尖瓣环的扩张时乳头肌不固定</label></li>
</ul>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/kokkos/ssh/npuheart/build_mv
python3 batch_running.py 
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CUDA_VISIBLE_DEVICES</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token function">mkdir</span> log
<span class="token function">mkdir</span> config
taskset <span class="token parameter variable">-c</span> <span class="token number">70</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test70.json <span class="token operator">></span> log/MV70.out <span class="token operator">&amp;</span>
taskset <span class="token parameter variable">-c</span> <span class="token number">71</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test71.json <span class="token operator">></span> log/MV71.out <span class="token operator">&amp;</span>
taskset <span class="token parameter variable">-c</span> <span class="token number">72</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test72.json <span class="token operator">></span> log/MV72.out <span class="token operator">&amp;</span>
taskset <span class="token parameter variable">-c</span> <span class="token number">73</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test73.json <span class="token operator">></span> log/MV73.out <span class="token operator">&amp;</span>
taskset <span class="token parameter variable">-c</span> <span class="token number">74</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test74.json <span class="token operator">></span> log/MV74.out <span class="token operator">&amp;</span>
taskset <span class="token parameter variable">-c</span> <span class="token number">75</span> <span class="token function">nohup</span> ./test/fsi_real_MV_tube config/test75.json <span class="token operator">></span> log/MV75.out <span class="token operator">&amp;</span></code></pre>
<h3 id="月27日">6月27日</h3>
<h4 id="准备好了五组网格数据">准备好了五组网格数据</h4>
<p>数据下载：https://pan.quark.cn/s/6d98de8b7740</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271139599.jpeg"
alt="0.0" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271138113.jpeg"
alt="0.1" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271138114.jpeg"
alt="0.2" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271139132.jpeg"
alt="0.3" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271138101.jpeg"
alt="0.4" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271139036.jpeg"
alt="0.5" /></div></div></div>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271154989.jpeg"
alt="0.1_tube" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271154976.jpeg"
alt="0.2_tube" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271154827.jpeg"
alt="0.3_tube" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271154960.jpeg"
alt="0.4_tube" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/202406271154981.jpeg"
alt="0.5_tube" /></div></div></div>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
  </entry>
  <entry>
    <title>直管二尖瓣模拟日志(二)</title>
    <url>/posts/59583/</url>
    <content><![CDATA[<p>第二部分。</p>
<span id="more"></span>
<h2 id="月6日">7月6日</h2>
<ul class="task-list">
<li><label><input type="checkbox" />直管网格壁面厚度为 <span
class="math inline">\(0.25\text{cm}\)</span> , 直管外环半径为 <span
class="math inline">\(4.05\text{cm}\)</span>.</label></li>
<li><label><input type="checkbox" />将网格移动到 Git Large File
Storage.</label></li>
</ul>
<h4 id="git-lfs-的用法">GIT LFS 的用法</h4>
<p>网格文件过大，准备存储到GitHub上(GitHub LFS
存储限额为1GB，存储大模型的魔塔社区和Hugging
face提供无限量的存储空间，遂将数据仓库从GitHub仓库迁移到了魔塔社区)。</p>
<ol type="1">
<li>跟踪</li>
</ol>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs track <span class="token string">"*.h5"</span>
<span class="token function">git</span> lfs track <span class="token string">"*.xdmf"</span>
<span class="token function">git</span> lfs track <span class="token string">"*.vtu"</span>
<span class="token function">git</span> lfs track <span class="token string">"*.pvd"</span>
<span class="token function">git</span> lfs track <span class="token string">"*.xml"</span></code></pre>
<ol start="2" type="1">
<li>添加文件</li>
</ol>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span></code></pre>
<ol start="3" type="1">
<li>上传</li>
</ol>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"add file.psd"</span>
<span class="token function">git</span> push</code></pre>
<ol start="4" type="1">
<li>拉取</li>
</ol>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs fetch
<span class="token function">git</span> lfs checkout</code></pre>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407061558489.png"
alt="上传到 Git Large File Storage" />
<figcaption aria-hidden="true">上传到 Git Large File
Storage</figcaption>
</figure>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407061600054.png"
alt="免费额度" />
<figcaption aria-hidden="true">免费额度</figcaption>
</figure>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
  </entry>
  <entry>
    <title>自动化集成与部署(一)</title>
    <url>/posts/23882/</url>
    <content><![CDATA[<p>通过Webhook连接各种计算资源完成任务。</p>
<ul>
<li>CI: 持续集成（Continuous Integration）</li>
<li>CD: 持续交付/持续部署（Continuous Delivery/Continuous
Deployment）</li>
</ul>
<span id="more"></span>
<p>每次修改代码后，IB-FEniCS通过GitHub
Action自动完成编译、测试，发送消息给n8n，由n8n引导各项工作。</p>
<h3 id="n8n">1. n8n</h3>
<p>在 n8n 放置一个 Webhook
节点监听HTTP请求，一旦接收到以POST方式发送过来的请求便触发接下来的工作流。</p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407141745176.png"
alt="Webhook 节点" />
<figcaption aria-hidden="true">Webhook 节点</figcaption>
</figure>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407141707614.png"
alt="Webhook 节点的设置" />
<figcaption aria-hidden="true">Webhook 节点的设置</figcaption>
</figure>
<h3 id="github">2. GitHub</h3>
<p>在GitHub设置触发Webhook的条件，GitHub仓库的任何动作都会触发发送HTTP请求。
例如：创建了一个issue，n8n那里就会收到信号，执行后续工作流程。 <img data-src="https://githubimages.pengfeima.cn/images/202407141707808.png"
alt="GitHub Webhook" /></p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407141706496.png"
alt="GitHub Issue" />
<figcaption aria-hidden="true">GitHub Issue</figcaption>
</figure>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/202407141706736.png"
alt="已经发送的请求" />
<figcaption aria-hidden="true">已经发送的请求</figcaption>
</figure>
]]></content>
      <categories>
        <category>自动化</category>
      </categories>
      <tags>
        <tag>GitHub Action</tag>
        <tag>n8n</tag>
        <tag>serverless</tag>
      </tags>
  </entry>
  <entry>
    <title>自动化集成与部署(二)</title>
    <url>/posts/28504/</url>
    <content><![CDATA[<p>设想一下，我们需要周期性地执行一个计算密集型任务，并且需要利用本地的计算资源。为此，我们可以向仓库添加自托管的运行器，通过将任务以文本形式提交到仓库的指定分支，触发
GitHub Action
来执行工作流。由于科学计算任务通常需要非常复杂的环境配置，我们可以提前构建好镜像(包括可以执行GPU程序的镜像)，通过
GitHub Action
拉取这些镜像并在容器中执行命令，从而省略冗长的环境配置步骤，节省时间。</p>
<span id="more"></span>
<h3 id="打包容器为镜像并上传">打包容器为镜像并上传</h3>
<p>在本地容器中配置好环境，停止容器，将容器打包成镜像，上传到 Docker
Hub. <pre class="language-none"><code class="language-none">sudo docker stop 530d5a791f5a
sudo docker commit 530d5a791f5a mapengfei&#x2F;npuheart:latex
docker push mapengfei&#x2F;npuheart:latex
sudo docker run -it mapengfei&#x2F;npuheart:latex bash</code></pre></p>
<h3 id="直接构建镜像并上传">直接构建镜像并上传</h3>
<p>镜像直接从 Dockerfile 文件构建。 <pre class="language-none"><code class="language-none">docker rmi mapengfei&#x2F;npuheart:latex
docker tag npuheart:latest mapengfei&#x2F;npuheart:latex
docker push mapengfei&#x2F;npuheart:latex
sudo docker rmi mapengfei&#x2F;npuheart:latex</code></pre></p>
<h3 id="在-github-action-中拉取镜像并使用">在 GitHub Action
中拉取镜像并使用</h3>
<p>参见文档：<a
href="https://docs.github.com/zh/actions/using-jobs/running-jobs-in-a-container">在容器中运行作业</a></p>
<h3 id="在-github-action-中构建镜像并上传">在 GitHub Action
中构建镜像并上传</h3>
<p>参考文件：<a
href="https://github.com/shaoyaoqian/docker-computing-images/blob/ubuntu-cuda-deal/docker-compose.yml">docker.yml</a></p>
<p>每次打标签都会进行一次docker镜像构建，并通过推送到 Docker Hub.</p>
<pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Publish Docker image
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">tags</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'*'</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">push_to_registry</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> Push Docker image to Docker Hub
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out the repo
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Log in to Docker Hub
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.DOCKER_USERNAME <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.DOCKER_PASSWORD <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Extract metadata (tags<span class="token punctuation">,</span> labels) for Docker
        <span class="token key atrule">id</span><span class="token punctuation">:</span> meta
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/metadata<span class="token punctuation">-</span>action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">images</span><span class="token punctuation">:</span> mapengfei/npuheart
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push Docker image
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">context</span><span class="token punctuation">:</span> .
          <span class="token key atrule">file</span><span class="token punctuation">:</span> images<span class="token punctuation">-</span>latex<span class="token punctuation">-</span>newest/Dockerfile
          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> steps.meta.outputs.tags <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
          <span class="token key atrule">labels</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> steps.meta.outputs.labels <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre>
]]></content>
      <categories>
        <category>自动化</category>
      </categories>
      <tags>
        <tag>GitHub Action</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>SAV 方法求解流固耦合问题(一)</title>
    <url>/posts/48079/</url>
    <content><![CDATA[<p>从理论上分析，SAV技术的引入可显著增强IB方法的稳定性，。然而，唯有最终的数值分析结果，才能作为最具说服力的证据。本次数值实验均在<a
href="https://github.com/shaoyaoqian/immersed_boundary_method">IB-FEniCS</a>(暂未开源)中验证。</p>
<p>(Lin et al., 2019)</p>
<p>(Li and Shen, 2020)</p>
<p>(Li and Shen, 2020)
方法需要满足一定的边界条件，以下是我给出的算例。</p>
<span id="more"></span>
<h3 id="sav方法求解ns方程">SAV方法求解NS方程</h3>
<p>主要的参考文献有两篇<a href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a><span
class="math inline">\(^,\)</span><a href="#fn2" class="footnote-ref"
id="fnref2"
role="doc-noteref"><sup>2</sup></a>，验证稳定性的算例有两个，一个是
Kovasznay 流，另一个是圆柱绕流。</p>
<h4 id="kovasznay-流">Kovasznay 流</h4>
<p>Kovasznay 流的解析解为</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/202407161657475.svg" /></p>
<p>其中，<span class="math inline">\(\lambda=\frac{1}{2
\nu}-\sqrt{\frac{1}{4 \nu^2}+4 \pi^2}\)</span>，<span
class="math inline">\(\nu = 0.025\)</span>，计算区域为<span
class="math inline">\([-0.5,1.0]\times[-0.5,0.5]\)</span>。这是一个通过非稳态方程求解的稳态问题，给定初值<span
class="math inline">\(\mathbf{u}_0=\mathbf{0}\)</span>，源项<span
class="math inline">\(\mathbf{f}=\mathbf{0}\)</span>，速度的 Dirichlet
边界条件由解析解给定。如图所示，解析解可以表示一块挡板后面的流体运动。</p>
<p><img data-src="https://githubimages.pengfeima.cn/images/image-20240721223859047.png" /></p>
<p>论文中的数值试验主要分如下几点： ##### 空间收敛性</p>
<p>给定<span class="math inline">\(\Delta t = 0.005\)</span>, <span
class="math inline">\(C_0=0.1\)</span>,
网格不变，随着谱元的阶数提升，速度误差减小，直到"饱和"。饱和后，误差受到时间步长的影响不再变化。评估误差饱和之前的变化是否满足空间收敛规律。</p>
<h5 id="c_0对精度的影响"><span
class="math inline">\(C_0\)</span>对精度的影响</h5>
<p>给定<span class="math inline">\(\Delta t = 0.005\)</span>,
谱元的阶数为<span class="math inline">\(14\)</span>, 分别计算 <span
class="math inline">\(C_0=0.1\)</span> 和 <span
class="math inline">\(C_0=500\)</span>，比较误差的变化，时间算到了<span
class="math inline">\(10^5s\)</span>.</p>
<p>计算<span
class="math inline">\(C_0\in[10^{-4},10^{14}]\)</span>，计算达到稳态后的误差。</p>
<h5 id="稳定性">稳定性</h5>
<ol type="1">
<li>考虑谱元阶数10和16，<span class="math inline">\(C_0=0.01\)</span>,
<span class="math inline">\(\Delta t
\in[0.001,1.0]\)</span>，发现时间步长过大，误差较大，但是数值计算仍然能够保持稳定。如果是半隐格式，步长稍微增大，数值计算就不再稳定，如下图所示。current
scheme exhibits a different behavior and produces stable computations
even with much larger <span class="math inline">\(t\)</span>
values.</li>
</ol>
<p><img data-src="https://githubimages.pengfeima.cn/images/image-20240721230945788.png" /></p>
<ol start="2" type="1">
<li>时间步长再调大，误差太大，计算结果没有意义了，但是我们的算法还能保持稳定。</li>
</ol>
<p><img data-src="https://githubimages.pengfeima.cn/images/image-20240721231158590.png" /></p>
<ol start="3" type="1">
<li>画出不同时间步长计算出的<span
class="math inline">\(E(t)\)</span>和<span
class="math inline">\([R(t)]^2\)</span>的曲线，当<span
class="math inline">\(\Delta t\)</span>
很小时，两条曲线几乎相同。随着<span class="math inline">\(\Delta
t\)</span>增加，两条曲线均开始出现波动，差距逐渐增加。这表明，我们提出的数值格式能自动调整<span
class="math inline">\(\frac{R(t)}{\sqrt{E(t)}}\)</span>,
显式处理非线性项，因此能使计算更加稳定。</li>
</ol>
<p>目前，首先是李晓丽的文章中的算例，计算区域为 <span
class="math inline">\(\Omega=(0,1) \times(0,1)\)</span>,<span
class="math inline">\(T=1\)</span>,<span
class="math inline">\(\nu=1\)</span> , <span
class="math inline">\(\delta=0.1\)</span>, <span
class="math inline">\(\Delta t=h=k\)</span>. 记 <span
class="math display">\[
\left\{\begin{array}{l}
\left\|e_X\right\|_{\infty, 2}=\max _{0 \leq n \leq
m}\left\{\left\|e_X^n\right\|\right\}, \\
\left\|e_p\right\|_{2,2}=\left(\sum_{n=0}^m \Delta t\left\|P^{n+1 /
2}-p^{n+1 / 2}\right\|_{l^2, M}^2\right)^{1 / 2} \\
\left\|e_q\right\|_{\infty}=\max _{0 \leq n \leq m}\left|Q^n-q^n\right|,
\end{array}\right.
\]</span> 其中， <span class="math inline">\(X=\mathbf{u}, d_x u_1, D_y
u_1\)</span>.</p>
<h4 id="算例一">算例一</h4>
<p><span class="math display">\[
\left\{\begin{array}{l}
p(x, y, t)=\exp (t)\left(x^3-1 / 4\right) \\
u_1(x, y, t)=-\exp (t) x^2(x-1)^2 y(y-1)(2 y-1) / 256 \\
u_2(x, y, t)=\exp (t) x(x-1)(2 x-1) y^2(y-1)^2 / 256
\end{array}\right.
\]</span></p>
<h3 id="sav求解ib方程">SAV求解IB方程</h3>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Lin L, Yang Z, Dong S. Numerical approximation of
incompressible Navier-Stokes equations based on an auxiliary energy
variable[J]. Journal of Computational Physics, Elsevier, 2019, 388:
1–22.<a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Li X, Shen J. Error Analysis of the SAV-MAC Scheme for
the Navier—Stokes Equations[J]. SIAM Journal on Numerical Analysis,
2020, 58(5): 2465–2491.<a href="#fnref2" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>SAV</tag>
        <tag>IB</tag>
        <tag>benchmarking</tag>
        <tag>idea</tag>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>风雷软件安装</title>
    <url>/posts/15933/</url>
    <content><![CDATA[<p>安装过程参照了《风雷软件应用与开发指南2406.v1217》的附录A中的教程(南航高宜胜)，能够成功安装2206版。2406版因为mgrid没有编译成功，安装失败。</p>
<span id="more"></span>
<h3 id="风雷版本">风雷版本</h3>
<pre class="language-bash" data-language="bash"><code class="language-bash">4331c1b45a22498aed2cb906ed82b675df702c85 <span class="token comment"># 2406版本，安装失败，mgrid未编译成功</span>
907f6ddd4d6093a2c472dc4632b29b0f6fbc4c3c <span class="token comment"># 2206版本，安装成功</span></code></pre>
<h3 id="安装环境">安装环境</h3>
<p>设备为MacBook Air M2, 软件环境如下：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pengfei@mapengfeideMacBook-Air PHengLEI % sw_vers
ProductName:            macOS
ProductVersion:         <span class="token number">15.0</span>
BuildVersion:           24A5289h
pengfei@mapengfeideMacBook-Air PHengLEI % brew info
<span class="token number">57</span> kegs, <span class="token number">50,023</span> files, <span class="token number">1</span>.7GB
pengfei@mapengfeideMacBook-Air <span class="token number">2024</span> % <span class="token function">which</span> cmake
/opt/homebrew/bin/cmake
pengfei@mapengfeideMacBook-Air <span class="token number">2024</span> % cmake <span class="token parameter variable">--versio</span>
n
cmake version <span class="token number">3.30</span>.0

CMake suite maintained and supported by Kitware <span class="token punctuation">(</span>kitware.com/cmake<span class="token punctuation">)</span>.
pengfei@mapengfeideMacBook-Air <span class="token number">2024</span> % <span class="token function">which</span> gcc-14
/opt/homebrew/bin/gcc-14
pengfei@mapengfeideMacBook-Air <span class="token number">2024</span> % gcc-14 <span class="token parameter variable">-v</span>
Using built-in specs.
<span class="token assign-left variable">COLLECT_GCC</span><span class="token operator">=</span>gcc-14
<span class="token assign-left variable">COLLECT_LTO_WRAPPER</span><span class="token operator">=</span>/opt/homebrew/Cellar/gcc/14.1.0_2/bin/<span class="token punctuation">..</span>/libexec/gcc/aarch64-apple-darwin23/14/lto-wrapper
Target: aarch64-apple-darwin23
Configured with: <span class="token punctuation">..</span>/configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/opt/homebrew/opt/gcc <span class="token parameter variable">--libdir</span><span class="token operator">=</span>/opt/homebrew/opt/gcc/lib/gcc/current --disable-nls --enable-checking<span class="token operator">=</span>release --with-gcc-major-version-only --enable-languages<span class="token operator">=</span>c,c++,objc,obj-c++,fortran,m2 --program-suffix<span class="token operator">=</span>-14 --with-gmp<span class="token operator">=</span>/opt/homebrew/opt/gmp --with-mpfr<span class="token operator">=</span>/opt/homebrew/opt/mpfr --with-mpc<span class="token operator">=</span>/opt/homebrew/opt/libmpc --with-isl<span class="token operator">=</span>/opt/homebrew/opt/isl --with-zstd<span class="token operator">=</span>/opt/homebrew/opt/zstd --with-pkgversion<span class="token operator">=</span><span class="token string">'Homebrew GCC 14.1.0_2'</span> --with-bugurl<span class="token operator">=</span>https://github.com/Homebrew/homebrew-core/issues --with-system-zlib <span class="token parameter variable">--build</span><span class="token operator">=</span>aarch64-apple-darwin23 --with-sysroot<span class="token operator">=</span>/Library/Developer/CommandLineTools/SDKs/MacOSX14.sdk
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version <span class="token number">14.1</span>.0 <span class="token punctuation">(</span>Homebrew GCC <span class="token number">14.1</span>.0_2<span class="token punctuation">)</span> 
pengfei@mapengfeideMacBook-Air <span class="token number">2024</span> % </code></pre>
<h3 id="第三方库">第三方库</h3>
<p>风雷仓库包含了除openmpi以外的第三方库。我没有使用git拉取代码，而是使用了GitHub
Desktop，代码位于<code>$HOME/GitHub</code>。后面频繁使用这个变量，索性将它写入环境变量。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"export PHENGLEI=<span class="token environment constant">$HOME</span>/GitHub/fenglei"</span> <span class="token operator">>></span> ~/.zshrc</code></pre>
<h4 id="openmpi">OPENMPI</h4>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.6.tar.bz2
<span class="token function">tar</span> <span class="token parameter variable">-xjf</span> openmpi-4.1.6.tar.bz2
<span class="token builtin class-name">cd</span> openmpi-4.1.6 <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> build <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build
<span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc-14 <span class="token assign-left variable">CXX</span><span class="token operator">=</span>g++-14 <span class="token punctuation">..</span>/configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/pkg/openmpi-4.1.6 --enable-mpi1-compatibility --enable-static
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"export PATH=<span class="token environment constant">$HOME</span>/pkg/openmpi-4.1.6/bin:<span class="token environment constant">$PATH</span>"</span> <span class="token operator">>></span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"export LD_LIBRARY_PATH=<span class="token environment constant">$HOME</span>/pkg/openmpi-4.1.6/lib:<span class="token variable">$LD_LIBRARY_PATH</span>"</span> <span class="token operator">>></span> ~/.zshrc</code></pre>
<p>完成openmpi的安装，将路径写入环境变量并检查。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pengfei@mapengfeideMacBook-Air PHengLEI % <span class="token function">which</span> mpirun
/Users/pengfei/pkg/openmpi-4.1.6/bin/mpirun
pengfei@mapengfeideMacBook-Air PHengLEI % <span class="token function">which</span> mpicc
/Users/pengfei/pkg/openmpi-4.1.6/bin/mpicc
pengfei@mapengfeideMacBook-Air PHengLEI % <span class="token function">which</span> mpicxx
/Users/pengfei/pkg/openmpi-4.1.6/bin/mpicxx
pengfei@mapengfeideMacBook-Air PHengLEI % mpicxx <span class="token parameter variable">-v</span>
Using built-in specs.
<span class="token assign-left variable">COLLECT_GCC</span><span class="token operator">=</span>/opt/homebrew/bin/g++-14
<span class="token assign-left variable">COLLECT_LTO_WRAPPER</span><span class="token operator">=</span>/opt/homebrew/Cellar/gcc/14.1.0_2/bin/<span class="token punctuation">..</span>/libexec/gcc/aarch64-apple-darwin23/14/lto-wrapper
Target: aarch64-apple-darwin23
Configured with: <span class="token punctuation">..</span>/configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/opt/homebrew/opt/gcc <span class="token parameter variable">--libdir</span><span class="token operator">=</span>/opt/homebrew/opt/gcc/lib/gcc/current --disable-nls --enable-checking<span class="token operator">=</span>release --with-gcc-major-version-only --enable-languages<span class="token operator">=</span>c,c++,objc,obj-c++,fortran,m2 --program-suffix<span class="token operator">=</span>-14 --with-gmp<span class="token operator">=</span>/opt/homebrew/opt/gmp --with-mpfr<span class="token operator">=</span>/opt/homebrew/opt/mpfr --with-mpc<span class="token operator">=</span>/opt/homebrew/opt/libmpc --with-isl<span class="token operator">=</span>/opt/homebrew/opt/isl --with-zstd<span class="token operator">=</span>/opt/homebrew/opt/zstd --with-pkgversion<span class="token operator">=</span><span class="token string">'Homebrew GCC 14.1.0_2'</span> --with-bugurl<span class="token operator">=</span>https://github.com/Homebrew/homebrew-core/issues --with-system-zlib <span class="token parameter variable">--build</span><span class="token operator">=</span>aarch64-apple-darwin23 --with-sysroot<span class="token operator">=</span>/Library/Developer/CommandLineTools/SDKs/MacOSX14.sdk
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version <span class="token number">14.1</span>.0 <span class="token punctuation">(</span>Homebrew GCC <span class="token number">14.1</span>.0_2<span class="token punctuation">)</span></code></pre>
<h4 id="hdf5">HDF5</h4>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> hdf5-1.8.8-p1.tar.gz
<span class="token builtin class-name">cd</span> hdf5-1.8.8-p1 <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> build <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> lib <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build
<span class="token assign-left variable">CC</span><span class="token operator">=</span>mpicc <span class="token assign-left variable">CXX</span><span class="token operator">=</span>mpicxx <span class="token punctuation">..</span>/configure --enable-parallel --enable-largefile <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty/hdf5-1.8.8-p1/lib --enable-static
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
<span class="token function">cp</span> <span class="token punctuation">..</span>/lib/lib/*.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/Darwin-arm64
<span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty/HDF5/ <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> include include_backup
<span class="token function">cp</span> <span class="token parameter variable">-r</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty/hdf5-1.8.8-p1/lib/include <span class="token builtin class-name">.</span></code></pre>
<h4 id="cgns">CGNS</h4>
<pre class="language-bash" data-language="bash"><code class="language-bash">l <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> cgns-3.3.0.tar.gz
<span class="token builtin class-name">cd</span> CGNS-3.3.0/src <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ./configure</code></pre>
<p>修改 <code>configure</code> 文件第 771
行，加上返回类型<code>int main()&#123;return(0);&#125;</code>，否则会报错。</p>
<pre class="language-none"><code class="language-none">CC&#x3D;mpicc CFLAGS&#x3D;-lz .&#x2F;configure --enable-lagacy --with-mpi&#x3D;$HOME&#x2F;pkg&#x2F;openmpi-4.1.6&#x2F;bin&#x2F;mpicc --with-hdf5&#x3D;$PHENGLEI&#x2F;PHengLEI&#x2F;3rdparty&#x2F;hdf5-1.8.8-p1&#x2F;lib --prefix&#x3D;$PHENGLEI&#x2F;PHengLEI&#x2F;3rdparty&#x2F;CGNS-3.3.0&#x2F;src&#x2F;lib --enable-gcc --with-fortran&#x3D;no --disable-shared
make -j8 &amp;&amp; make install
cp .&#x2F;lib&#x2F;lib&#x2F;libcgns.a ..&#x2F;..&#x2F;Darwin-arm64</code></pre>
<h4 id="parmetis">ParMETIS</h4>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> parmetis-4.0.3.tar.gz <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> parmetis-4.0.3
<span class="token function">make</span> config <span class="token assign-left variable">prefix</span><span class="token operator">=</span>.
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span></code></pre>
<pre class="language-bash" data-language="bash"><code class="language-bash">pengfei@Mas-MacBook-Air fenglei % <span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty/Darwin-arm64
pengfei@Mas-MacBook-Air Darwin-arm64 % <span class="token function">ls</span>
libcgns.a       libhdf5.a       libhdf5_hl.a    libmetis.a      libparmetis.a</code></pre>
<h4 id="mgrid">MGRID</h4>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI/3rdparty <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> mgrid-1.0.tar.gz <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> mgrid-1.0</code></pre>
<p>打开<code>CMakeLists.txt</code>，加入下面一行。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">set<span class="token punctuation">(</span>CMAKE_C_FLAGS <span class="token string">"<span class="token variable">$&#123;CMAKE_C_FLAGS&#125;</span> -Wno-implicit-function-declaration"</span><span class="token punctuation">)</span></code></pre>
<pre class="language-none"><code class="language-none">cd build &amp;&amp; cmake .. &amp;&amp; make</code></pre>
<p>遇到报错，删除<code>#include &lt;malloc.h&gt;</code>。</p>
<pre class="language-none"><code class="language-none">mv MGridGen&#x2F;Lib&#x2F;libmgrid.a ..&#x2F;..&#x2F;Darwin-arm64&#x2F;</code></pre>
<h4 id="eigen">EIGEN</h4>
<pre class="language-none"><code class="language-none">cd $PHENGLEI&#x2F;PHengLEI&#x2F;3rdparty &amp;&amp; tar -xvf mgrid-1.0.tar.gz</code></pre>
<p>2406版 将<code>Darwin-arm64</code>移动<code>liblinux</code>.</p>
<h3 id="安装风雷">安装风雷</h3>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token variable">$PHENGLEI</span>/PHengLEI <span class="token operator">&amp;&amp;</span>  <span class="token function">mkdir</span> build <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build
cmake <span class="token punctuation">..</span>
ccmake <span class="token punctuation">..</span></code></pre>
<p>在出现界面中按<code>t</code>键进入高级模式，修改以下内容： -
CMAKE_CXX_COMPILER改为mpicxx的路径, - CMAKE_CXX_FLAGS改为-lz, -
USE_Windows_X64改为OFF. - USE_TecplotLib改为OFF</p>
<p>修改后，按c键配置，按e键退出，再按g键生成相关的编译配置文件。可能需要重复多次才能修改成功。最后，编译，运行。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token parameter variable">-j8</span>
<span class="token builtin class-name">cd</span> PHengLEIv3d0 <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-r</span> bin grid
<span class="token function">mv</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/examples/bin <span class="token builtin class-name">.</span>
<span class="token function">mv</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/examples/grid <span class="token builtin class-name">.</span>
./PHengLEIv3d0</code></pre>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>风雷</tag>
        <tag>CFD</tag>
      </tags>
  </entry>
  <entry>
    <title>SAV 方法求解 N-S 方程(二)</title>
    <url>/posts/34792/</url>
    <content><![CDATA[<p>SAV <span id="more"></span></p>
<h3 id="半离散格式的构造">半离散格式的构造</h3>
<p>这种格式的显著特征是引入了一个与N-S系统总能量关联的辅助变量(auxiliary
variable)。辅助变量的定义如下，在定义能量的时候包含了对流项的边界积分。
<span class="math display">\[
R(t)=\sqrt{E(t)}
\]</span> (3)和(4)为动量方程和辅助变量方程， <span
class="math display">\[
\frac{\partial \mathbf{u}}{\partial t}+\mathbf{N}(\mathbf{u})+\nabla
p-\nu \nabla^2 \mathbf{u}=\mathbf{f},\tag{3}
\]</span></p>
<p><span class="math display">\[
\begin{aligned}
2 R \frac{d R}{d t}=\frac{d E}{d t}=\int_{\Omega} \frac{\partial
\mathbf{u}}{\partial t} \cdot
\mathbf{u}=\int_{\Omega}\left(\frac{\partial \mathbf{u}}{\partial
t}+\mathbf{u} \cdot \nabla \mathbf{u}\right) \cdot
\mathbf{u}-\int_{\partial \Omega}(\mathbf{n} \cdot \mathbf{u})
\frac{1}{2}|\mathbf{u}|^2
\end{aligned}
\]</span></p>
<p>根据定义，方程(3)和方程(4)可以修改成(5)和(6)。 <span
class="math display">\[
\frac{\partial \mathbf{u}}{\partial t}+\frac{R(t)}{\sqrt{E(t)}}
\mathbf{N}(\mathbf{u})+\nabla p-v \nabla^2 \mathbf{u}=\mathbf{f}
.\tag{5}
\]</span> <span class="math display">\[
2 R \frac{d R}{d t}=\int_{\Omega}\left[\frac{\partial
\mathbf{u}}{\partial t}+\frac{R(t)}{\sqrt{E(t)}}
\mathbf{N}(\mathbf{u})\right] \cdot \mathbf{u}-\int_{\partial
\Omega}(\mathbf{n} \cdot \mathbf{u}) \frac{1}{2}|\mathbf{u}|^2 .\tag{6}
\]</span></p>
<p>方程(5)和方程(6)加上以下几个条件后完备。 <span
class="math display">\[
\begin{aligned}
&amp; \mathbf{u}|_{\partial \Omega}=\mathbf{w}(\mathbf{x}, t),  \\
&amp; \mathbf{u}(\mathbf{x}, 0)=\mathbf{u}_{i n}(\mathbf{x}), \\
&amp; \int_{\Omega} p=0 , \\
&amp; R(0)=\left(C_0+\int_{\Omega} \frac{1}{2}\left|\mathbf{u}_{i
n}\right|^2\right)^{\frac{1}{2}}.
\end{aligned}
\]</span> 时间离散后，完整的方程组可以写成 <span class="math display">\[
\begin{aligned}
&amp; \frac{\gamma_0 \mathbf{u}^{n+1}-\hat{\mathbf{u}}}{\Delta
t}+\frac{R^{n+1}}{\sqrt{E^{n+1}}}
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)+\nabla p^{n+1}-v
\nabla^2 \mathbf{u}^{n+1}=\mathbf{f}^{n+1} \\
&amp; \nabla \cdot \mathbf{u}^{n+1}=0 \\
&amp; 2 R^{n+1} \frac{\gamma_0 R^{n+1}-\hat{R}}{\Delta
t}=\int_{\Omega}\left[\frac{\gamma_0
\mathbf{u}^{n+1}-\hat{\mathbf{u}}}{\Delta
t}+\frac{R^{n+1}}{\sqrt{E^{n+1}}}
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)\right] \cdot
\mathbf{u}^{n+1}-\int_{\partial \Omega}\left(\mathbf{n} \cdot
\mathbf{u}^{n+1}\right) \frac{1}{2}\left|\mathbf{u}^{n+1}\right|^2, \\
&amp; \mathbf{u}^{n+1}=\mathbf{w}^{n+1}, \quad \text { on } \partial
\Omega \\
&amp; E^{n+1}=\int_{\Omega}
\frac{1}{2}\left|\mathbf{u}^{n+1}\right|^2+C_0 \\
&amp; \int p^{n+1}=0
\end{aligned}
\]</span></p>
<h3 id="求解步骤">求解步骤</h3>
<p>首先从动量方程出发依次推导 <span class="math display">\[
\frac{\gamma_0 \mathbf{u}^{n+1}-\hat{\mathbf{u}}}{\Delta
t}+\frac{R^{n+1}}{\sqrt{E^{n+1}}}
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)+\nabla p^{n+1}-\nu
\nabla^2 \mathbf{u}^{n+1}=\mathbf{f}^{n+1}
\]</span></p>
<p><span class="math display">\[
\frac{\gamma_0}{\Delta t} \mathbf{u}^{n+1}+\nabla p^{n+1}-\nu \nabla^2
\mathbf{u}^{n+1}=\mathbf{G}^{n+1}-S
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)\tag{10}
\]</span></p>
<p><span class="math display">\[
\frac{\gamma_0}{\Delta t} \mathbf{u}^{n+1}+\nabla
p^{n+1}=\mathbf{G}^{n+1}-S
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)-\nu \nabla \times
\nabla \times \mathbf{u}^{n+1}
\]</span></p>
<p><span class="math display">\[
\int_{\Omega} \nabla p^{n+1} \cdot \nabla
q=\int_{\Omega}\left[\mathbf{G}^{n+1}-S
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)\right] \cdot \nabla
q-v \int_{\partial \Omega} \mathbf{n} \times \boldsymbol{\omega}^{n+1}
\cdot \nabla q-\frac{\gamma_0}{\Delta t} \int_{\partial \Omega}
\mathbf{n} \cdot \mathbf{w}^{n+1} q, \quad \forall q,\tag{11}
\]</span></p>
<figure>
<img data-src="https://githubimages.pengfeima.cn/images/image-20240721175427494.png"
alt="image-20240721175427494" />
<figcaption aria-hidden="true">image-20240721175427494</figcaption>
</figure>
<blockquote>
<p>表达式 <span
class="math inline">\(\overline{\boldsymbol{\omega}}^{n+1}=\nabla \times
\overline{\mathbf{u}}^{n+1}\)</span>
为采用了显式逼近涡量，这一项涉及边界上的空间导数，无法直接通过Dirichlet边界条件计算出来。这样做会降低数值格式的稳定性，但是显著简化了数值计算的复杂度，降低了大量计算。</p>
</blockquote>
<h4 id="求解步骤-1">求解步骤</h4>
<h5 id="求解p1和p2">求解p1和p2</h5>
<p>将<span class="math inline">\(p^{n+1}=p_1^{n+1}+S p_2^{n+1}\)</span>
代入方程(11)，分离出含有S得项和不含S的项。 <span class="math display">\[
\begin{gathered}
\int_{\Omega} \nabla p_1^{n+1} \cdot \nabla q=\int_{\Omega}
\mathbf{G}^{n+1} \cdot \nabla q-\nu \int_{\partial \Omega} \mathbf{n}
\times \overline{\boldsymbol{\omega}}^{n+1} \cdot \nabla
q-\frac{\gamma_0}{\Delta t} \int_{\partial \Omega} \mathbf{n} \cdot
\mathbf{w}^{n+1} q, \quad \forall q ,
\end{gathered}
\]</span></p>
<p><span class="math display">\[
\int_{\Omega} \nabla p_2^{n+1} \cdot \nabla q=-\int_{\Omega}
\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right) \cdot \nabla q, \quad
\forall q.
\]</span></p>
<h5 id="求解u1和u2">求解u1和u2</h5>
<p><img data-src="https://githubimages.pengfeima.cn/images/image-20240721180538703.png" />
首先对方程(10)进行分解，得到方程(15) <span class="math display">\[
\frac{\gamma_0}{\nu \Delta t} \int_{\Omega} \mathbf{u}^{n+1}
\varphi+\int_{\Omega} \nabla \varphi \cdot \nabla
\mathbf{u}^{n+1}=\frac{1}{v} \int_{\Omega}\left(\mathbf{G}^{n+1}-\nabla
p_1^{n+1}\right) \varphi-\frac{S}{v}
\int_{\Omega}\left[\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)+\nabla
p_2^{n+1}\right] \varphi\tag{15}
\]</span></p>
<p>将<span class="math inline">\(\mathbf{u}^{n+1}=\mathbf{u}_1^{n+1}+S
\mathbf{u}_2^{n+1}\)</span>代入方程，再进行同类项的合并，可得到 <span
class="math display">\[
\frac{\gamma_0}{v \Delta t} \int_{\Omega} \mathbf{u}_1^{n+1}
\varphi+\int_{\Omega} \nabla \varphi \cdot \nabla
\mathbf{u}_1^{n+1}=\frac{1}{v}
\int_{\Omega}\left(\mathbf{G}^{n+1}-\nabla p_1^{n+1}\right) \varphi,
\quad \forall  \left.\varphi\right|_{\partial \Omega}=0 \text {. }
\]</span> <span
class="math inline">\(\mathbf{u}_1^{n+1}=\mathbf{w}^{n+1},
\quad\)</span> <span class="math display">\[
\frac{\gamma_0}{v \Delta t} \int_{\Omega} \mathbf{u}_2^{n+1}
\varphi+\int_{\Omega} \nabla \varphi \cdot \nabla
\mathbf{u}_2^{n+1}=-\frac{1}{\nu}
\int_{\Omega}\left[\mathbf{N}\left(\overline{\mathbf{u}}^{n+1}\right)+\nabla
p_2^{n+1}\right] \varphi, \quad \forall \varphi|_{\partial \Omega}=0
\]</span> <span class="math inline">\(\left.\varphi\right|_{\partial
\Omega}=0\)</span></p>
<p><span class="math inline">\(\mathbf{u}_2^{n+1}=0, \quad\)</span> on
<span class="math inline">\(\partial \Omega\)</span>.</p>
<h4 id="计算辅助变量">计算辅助变量</h4>
<p><span class="math display">\[
F(S)=\frac{2 \gamma_0}{\Delta t} S^3 E(S)-\frac{2 \hat{R}}{\Delta t} S^2
\sqrt{E(S)}+B_0 S+B_1 S^2+B_2 S^3=0
\]</span></p>
]]></content>
  </entry>
  <entry>
    <title>SAV 方法求解 N-S 方程(一)</title>
    <url>/posts/2714/</url>
    <content><![CDATA[<p>最基本的方法，要求源项为零，边界上的速度通量为零，没必要速度为零。方腔驱动圆盘算例满足边界条件。
<span id="more"></span></p>
<h3 id="连续方程">连续方程</h3>
<p><span class="math display">\[
\begin{equation}  
E(t)=\frac{\rho}{2}\int_\Omega|\mathbf{u}|^2\mathrm d \mathbf{x}
\end{equation}
\]</span></p>
<p><span class="math display">\[
\begin{equation}
  q = \sqrt{E(t)+\epsilon}
\end{equation}
\]</span></p>
<p><span class="math display">\[
\begin{equation}
    \frac{\mathrm d E\left(t\right)}{\mathrm d t} =
\int_\Omega\rho\left(\frac{\partial \mathbf{u}}{\partial
t}+\mathbf{u}\cdot\nabla\mathbf{u}\right)\cdot\mathbf{u}\mathrm
d\mathbf{x}
\end{equation}
\]</span></p>
<p><span class="math display">\[
\begin{equation}
  \frac{\mathrm d q}{\mathrm d t}=\frac{1}{2q}\frac{\mathrm d
E\left(t\right)}{\mathrm d t}=
\frac{\rho}{2q}\int_\Omega\left(\frac{\partial \mathbf{u}}{\partial
t}+\mathbf{u}\cdot\nabla\mathbf{u}\right)\cdot\mathbf{u}\mathrm
d\mathbf{x}
\end{equation}
\]</span></p>
<h3 id="时间离散">时间离散</h3>
<p><span class="math display">\[
\begin{equation}
    \rho\frac{\mathbf{u}_{n+1}-\mathbf{u}_n}{\Delta t}
    +\frac{\rho
q_{n+1}}{\sqrt{E(\tilde{\mathbf{u}}_{n+1})+\delta}}(\mathbf{u}_n\cdot\nabla\mathbf{u}_{n})
    -\mu\Delta\mathbf{u}_{n+1}+\nabla p_{n+1}
    =\mathbf{f}_{n+1},
\end{equation}
\]</span></p>
<p><span class="math display">\[
\begin{equation}\frac{q_{n+1}-q_n}{\Delta t} =
\frac{\rho}{2q^{n+1}}\left(\frac{\mathbf{u}_{n+1}-\mathbf{u}_n}{\Delta
t}, \mathbf{u}_{n+1}\right) +
\frac{\rho}{2\sqrt{E(\tilde{\mathbf{u}}_{n+1})+\delta}}\left(\mathbf{u}_n\cdot\nabla\mathbf{u}_n,\mathbf{u}_{n+1}\right),
    \end{equation}
\]</span></p>
<p><span class="math display">\[
\begin{equation}
      \label{semidiscrete:SAV:b}\nabla \cdot \mathbf{u}_{n+1}=0
    \end{equation}
\]</span></p>
<h3 id="辅助变量求解">辅助变量求解</h3>
<p><span class="math display">\[
\begin{equation}\label{SAV:S:1}
  S_{n+1}=\frac{q^{n+1}}{\sqrt{E\left(X^n\right)+\delta}},
  \quad \mathbf{u}^{n+1}=\mathbf{u}_1^{n+1}+S^{n+1} \mathbf{u}_2^{n+1},
  \quad p^{n+1}=p_1^{n+1}-S^{n+1} p_2^{n+1}
\end{equation}
\]</span> <span class="math display">\[
\begin{equation}\label{SAV:S:5}
  \begin{aligned}
  &amp; X_{1, n+1}=\frac{2}{\Delta
t}\left(E\left(\tilde{\mathbf{u}}^{n+1}\right)+\delta\right)+{\mu}\left\|\nabla
\mathbf{u}_2^{n+1}\right\|^2, \\
  &amp; X_{2, n+1}=-\frac{2 q^n}{\Delta t}
\sqrt{E\left(\tilde{\mathbf{u}}^{n+1}\right)+\delta}
  +{2\mu}\left(\nabla\mathbf{u}_1^{n+1}, \nabla
\mathbf{u}_2^{n+1}\right)
  -\left(\mathbf{g}^{n+1}, \mathbf{u}_2^{n+1}\right), \\
  &amp; X_{3,
n+1}={\mu}\left\|\nabla\left(\mathbf{u}_1^{n+1}\right)\right\|^2-\left(\mathbf{g}^{n+1},
\mathbf{u}_1^{n+1}\right) .
  \end{aligned}
\end{equation}
\]</span></p>
]]></content>
  </entry>
  <entry>
    <title>方腔驱动流的数值解</title>
    <url>/posts/44705/</url>
    <content><![CDATA[<p>方腔驱动流的数值解 <span id="more"></span></p>
<p>数值解 lid-driven cavity flow<a href="#fn1" class="footnote-ref"
id="fnref1" role="doc-noteref"><sup>1</sup></a><a href="#fn2"
class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a><a
href="#fn3" class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a><a href="#fn4" class="footnote-ref"
id="fnref4" role="doc-noteref"><sup>4</sup></a><a href="#fn5"
class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a></p>
<ul>
<li><p>考虑雷诺数 <span
class="math inline">\(Re=1000,5000,7500\)</span>,</p></li>
<li><p>二维问题，<span class="math inline">\(Re\approx7500\)</span>
，会出现出现 Hopf bifurcation<a href="#fn6" class="footnote-ref"
id="fnref6" role="doc-noteref"><sup>6</sup></a>,</p></li>
<li><p><span class="math inline">\(Re&lt;7500\)</span>,
收敛到稳定解,</p></li>
<li><p><span class="math inline">\(Re&gt;7500\)</span>,
稳定解和周期解。如果稳定解存在，初解和空间分辨率选取适当，那么能得到稳定解。</p></li>
</ul>
<p><strong>结果比较</strong>:</p>
<ol type="1">
<li>图流线图</li>
<li>画出 <span class="math inline">\(x =0.5\)</span>, <span
class="math inline">\(y =0.5\)</span> 两条线上，u, v, p，</li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150328892.png"
alt="image-20240723150328892" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150349831.png"
alt="image-20240723150349831" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150407377.png"
alt="image-20240723150407377" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150430359.png"
alt="image-20240723150430359" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150455543.png"
alt="image-20240723150455543" /></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150558084.png"
alt="image-20240723150558084" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150630284.png"
alt="image-20240723150630284" /></div><div class="group-picture-column"><img data-src="https://githubimages.pengfeima.cn/images/image-20240723150653531.png"
alt="image-20240723150653531" /></div></div></div>
<p><img data-src="https://githubimages.pengfeima.cn/images/image-20240723145058748.png" /></p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Griffith, Boyce E. 《An Accurate and Efficient Method
for the Incompressible Navier–Stokes Equations Using the Projection
Method as a Preconditioner》. <em>Journal of Computational Physics</em>
228, 期 20 (2009年11月): 7565–95.
https://doi.org/10.1016/j.jcp.2009.07.001.<a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>U. Ghia, K.N. Ghia, C.T. Shin, High-Re solutions for
incompressible flow using the Navier–Stokes equations and a multigrid
method, J. Comput. Phys. 48 (3) (1982) 387–411.<a href="#fnref2"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>O. Botella, R. Peyret, Benchmark spectral results on the
lid-driven cavity flow, Comput. Fluid 27 (4) (1998) 421–433.<a
href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>E. Erturk, T.C. Corke, C. Gökçöl, Numerical solutions of
2-D steady incompressible driven cavity flow at high Reynolds numbers,
Int. J. Numer. Methods Fluid 48 (7) (2005) 747–774.<a href="#fnref4"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>C.J. Roy, A.J. Sinclair, On the generation of exact
solutions for evaluating numerical schemes and estimating discretization
error, J. Comput. Phys. 228 (5) (2009) 1790–1802.<a href="#fnref5"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>Y.-F. Peng, Y.H. Shiau, R.R. Hwang, Transition in a 2-D
lid-driven cavity flow, Comput. Fluid 32 (3) (2003) 337–352.<a
href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
  </entry>
  <entry>
    <title>SAV 方法求解流固耦合问题(二)</title>
    <url>/posts/38426/</url>
    <content><![CDATA[<p>求解的流固耦合问题中，流体的速度为非齐次Dirichlet边界条件。
<span id="more"></span></p>
<h2 id="一阶时间离散">一阶时间离散：</h2>
<p>如果边界速度不为0， <span class="math display">\[
E(t)=\frac{\rho}{2}\int_{\Omega}|\mathbf{u}|^{2}+\int_{B_{r}}W(\mathcal{X})
\]</span></p>
<p><span class="math display">\[
\begin{split}
\frac{dE(t)}{dt}&amp;=\rho\int_{\Omega}\frac{\partial\mathbf{u}}{\partial
t}\cdot\mathbf{u}+\int_{B_{r}}\frac{\partial W}{\partial t}\\
&amp;=\rho\int_{\Omega}(\frac{\partial\mathbf{u}}{\partial
t}+\mathbf{u}\cdot\nabla\mathbf{u})\cdot\mathbf{u}-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u})|\mathbf{u}|^{2}+\int_{B_{r}}\frac{\partial
W}{\partial \mathbb{F}}:\frac{\partial \mathbb{F}}{\partial t}
\end{split}
\]</span></p>
<p>令<span class="math inline">\(q=\sqrt{E(t)+\delta}\)</span> <span
class="math display">\[
\begin{split}
\frac{dq}{dt}&amp;=\frac{1}{2}\frac{1}{\sqrt{E(t)+\delta}}\frac{dE(t)}{dt}=\frac{1}{2q}\frac{dE(t)}{dt}\\
&amp;=\frac{1}{2q}\left(\rho\int_{\Omega}(\frac{\partial\mathbf{u}}{\partial
t}+\mathbf{u}\cdot\nabla\mathbf{u})\cdot\mathbf{u}-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u})|\mathbf{u}|^{2}+\int_{B_{r}}\frac{\partial
W}{\partial \mathbb{F}}:\frac{\partial \mathbb{F}}{\partial t}\right)
\end{split}
\]</span> 那么IB方法等价于 <span class="math display">\[
\begin{split}
&amp;\rho(\frac{\partial{\mathbf{u}}}{\partial
t}+\frac{q}{\sqrt{E(t)+\delta}}\mathbf{u}\cdot\nabla\mathbf{u})-\mu\Delta
\mathbf{u}+\nabla p= \frac{q}{\sqrt{E(t)+\delta}}f\\
&amp;\frac{dq}{dt}=\frac{\rho}{2q}\int_{\Omega}(\frac{\partial\mathbf{u}}{\partial
t}+\mathbf{u}\cdot\nabla\mathbf{u})\cdot\mathbf{u}-\frac{\rho}{4q}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u})|\mathbf{u}|^{2}+\frac{1}{2q}\int_{B_{r}}\frac{\partial
W}{\partial \mathbb{F}}:\frac{\partial \mathbb{F}}{\partial t}\\
&amp;\nabla\cdot\mathbf{u}=0\\
&amp;\int_{B_{r}}\mathbf{F}\cdot\mathbf{V}=-\int_{B_{r}}\mathbb{P}:\nabla\mathbf{V}\\
&amp;\mathbf{f}=\int_{B_{r}}\mathbf{F}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t)
d\mathbf{X}\\
&amp;\frac{\partial\mathcal{X}}{\partial
t}=\int_{\Omega}\mathbf{u}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t))
d\mathbf{x}
\end{split}
\]</span> 数值格式： <span class="math display">\[
\begin{equation}\label{1}
\begin{split}
&amp;\rho\frac{\mathbf{u}^{n+1}-\mathbf{u}^{n}}{\Delta
t}-\mu\Delta\mathbf{u^{n+1}}+\nabla
p^{n+1}=\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\\
&amp;\frac{q^{n+1}-q^{n}}{\Delta t}=\frac{1}{2q^{n+1}}\frac{\rho}{\Delta
t}\int_{\Omega}(\mathbf{u}^{n+1}-\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}+\frac{\rho}{2\sqrt{E(\bar{t})+\delta}}\int_{\Omega}\mathbf{u}^{n}\cdot\nabla\mathbf{u}^{n}\cdot\mathbf{u}^{n+1}-\frac{\rho}{4q^{n+1}}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u}^{n+1})|\mathbf{u^{n+1}}|^{2}+\frac{1}{2\sqrt{E(\bar{t})+\delta}}\int_{B_{r}}\mathbb{P}^{n}:\frac{
\mathbb{F}^{n+1}-\mathbb{F}^{n}}{\Delta t}\\
&amp;\nabla\cdot\mathbf{u}^{n+1}=0\\
&amp;\int_{B_{r}}\mathbf{F}^{n}\cdot\mathbf{V}=-\int_{B_{r}}\mathbb{P}^{n}:\nabla\mathbf{V}\\
&amp;\mathbf{f}^{n}=\int_{B_{r}}\mathbf{F}^{n}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t)
d\mathbf{X}\\
&amp;\frac{\mathcal{X}^{n+1}-\mathcal{X}^{n}}{\Delta
t}=\int_{\Omega}\mathbf{u}^{n+1}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t))
d\mathbf{x}
\end{split}
\end{equation}
\]</span> 给方程1-1的两边关于<span
class="math inline">\(\mathbf{u}^{n+1}\)</span>做<span
class="math inline">\(L^{2}\)</span>内积,同时利用1-3式可得： <span
class="math display">\[
\begin{split}
&amp;\frac{\rho}{\Delta
t}\int_{\Omega}(\mathbf{u}^{n+1}-\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}-\mu\int_{\Omega}\Delta\mathbf{u}^{n+1}\cdot\mathbf{u}^{n+1}+\int_{\Omega}\nabla
p^{n+1}\cdot\mathbf{u}^{n+1}=\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}(f^{n}-\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}\\
&amp;\frac{\rho}{\Delta
t}\int_{\Omega}(\mathbf{u}^{n+1}-\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}-\left(\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{u}^{n+1}-\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}\right)+\left(\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u}^{n+1})p^{n+1}-\int_{\Omega}p^{n+1}\nabla\cdot\mathbf{u}^{n+1}\right)\\
&amp;=\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}(f^{n}-\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}\\
&amp;\textcolor{red}{\frac{\rho}{\Delta
t}\int_{\Omega}(\mathbf{u}^{n+1}-\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}}-\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{u}^{n+1}+\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u}^{n+1})p^{n+1}\\
&amp;=\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{f}^{n}\cdot\mathbf{u}^{n+1}\textcolor{red}{-\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}\cdot\mathbf{u}^{n+1}}
\end{split}
\]</span> 给方程1-2两边同时乘以<span
class="math inline">\(2q^{n+1}\)</span>可得： <span
class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta t})
=\textcolor{red}{\frac{\rho}{\Delta
t}\int_{\Omega}(\mathbf{u}^{n+1}-\mathbf{u}^{n})\cdot\mathbf{u}^{n+1}}\textcolor{red}{+\frac{\rho
q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{\Omega}\mathbf{u}^{n}\cdot\nabla\mathbf{u}^{n}\cdot\mathbf{u}^{n+1}}-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{u}^{n+1})|\mathbf{u^{n+1}}|^{2}+\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{B_{r}}\mathbb{P}^{n}:\frac{
\mathbb{F}^{n+1}-\mathbb{F}^{n}}{\Delta t}
\]</span> 将上面的两式相加可得： <span class="math display">\[
\begin{equation}
\begin{split}
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})=-\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{f}^{n}\cdot\mathbf{u}^{n+1}+\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{w}^{n+1}-\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p^{n+1}\\
-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}+\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{B_{r}}\mathbb{P}^{n}:\frac{
\mathbb{F}^{n+1}-\mathbb{F}^{n}}{\Delta t}
\end{split}
\end{equation}
\]</span> 令1-4式中的<span
class="math inline">\(\mathbf{V}=\mathcal{X}^{n+1}-\mathcal{X}^{n}\)</span>,
则 <span class="math display">\[
\begin{split}
\int_{B_{r}}\mathbf{F}^{n}\cdot(\mathcal{X}^{n+1}-\mathcal{X}^{n})&amp;=-\int_{B_{r}}\mathbb{P}^{n}:\nabla(\mathcal{X}^{n+1}-\mathcal{X}^{n})\\
&amp;=-\int_{B_{r}}\mathbb{P}^{n}:(\mathbb{F}^{n+1}-\mathbb{F}^{n})
\end{split}
\]</span> 将上式代入中可得： <span class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})=-\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\int_{\Omega}\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{f}^{n}\cdot\mathbf{u}^{n+1}+\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{w}^{n+1}-\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p^{n+1}\\
-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}-\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\frac{1}{\Delta
t}\int_{B_{r}}\mathbf{F}^{n}\cdot(\mathcal{X}^{n+1}-\mathcal{X}^{n})
\]</span> 对于1-5式关于<span
class="math inline">\(\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{u}^{n+1}\)</span>关于<span
class="math inline">\(L^{2}\)</span>做内积可得： <span
class="math display">\[
(\mathbf{f}^{n},\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{u}^{n+1})_{\Omega}=(\int_{B_{r}}\mathbf{F}^{n}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t)
d\mathbf{X}，\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{u}^{n+1})_{\Omega}
\]</span> 对于1-6式关于<span
class="math inline">\(\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{F}^{n}\)</span>关于<span
class="math inline">\(L^{2}\)</span>做内积可得： <span
class="math display">\[
\frac{1}{\Delta
t}(\mathcal{X}^{n+1}-\mathcal{X}^{n},\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{F}^{n})_{B_{r}}=(\int_{\Omega}\mathbf{u}^{n+1}\cdot\delta(\mathbf{x}-\mathcal{X}(\mathbf{X},t))
d\mathbf{x},\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{F}^{n})_{B_{r}}
\]</span> 根据插值算子和延拓算子满足对偶性可得 <span
class="math display">\[
\Delta
t(\mathbf{f}^{n},\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{u}^{n+1})_{\Omega}=(\mathcal{X}^{n+1}-\mathcal{X}^{n},\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\mathbf{F}^{n})_{B_{r}}
\]</span> 代入表达式中可得 <span class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})=-\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{w}^{n+1}-\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p^{n+1}\\
-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}
\]</span> 定理1：如果边界速度<span
class="math inline">\(\mathbf{w}^{n+1}=0\)</span>,数值格式满足下面的等式，且是无条件能量稳定的。
<span class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})+\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}=0
\]</span></p>
<h2 id="数值实现过程">数值实现过程：</h2>
<p>令<span
class="math inline">\(S=\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\)</span>,那么N-S方程可写成：
<span class="math display">\[
\frac{\rho}{\Delta t}\mathbf{u}^{n+1}+\nabla
p^{n+1}-\mu\Delta\mathbf{u^{n+1}}=S(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}))+\frac{\rho}{\Delta t}\mathbf{u}^{n}\\
\]</span> 由于<span
class="math inline">\(\nabla\cdot\mathbf{u}^{n+1}=0\)</span>, 那么 <span
class="math display">\[
\frac{\rho}{\Delta t}\mathbf{u}^{n+1}+\nabla
p^{n+1}=S(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}))+\frac{\rho}{\Delta
t}\mathbf{u}^{n}-\mu\nabla\times\nabla\times\mathbf{u}^{n+1}
\]</span> 令<span
class="math inline">\(q\)</span>是连续空间上的任意测试函数，则上式关于<span
class="math inline">\(\nabla q\)</span>做<span
class="math inline">\(L^{2}\)</span>内积可得： <span
class="math display">\[
\int_{\Omega}\nabla p^{n+1}\cdot\nabla
q=\int_{\Omega}S(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\cdot\nabla
q-\mu\int_{\partial\Omega}\mathbf{n}\times\mathbf{\omega}^{n+1}\cdot\nabla
q-\frac{\rho}{\Delta t}\int_{\Omega}\mathbf{n}\cdot\mathbf{w}^{n+1}q
\]</span> 其中<span
class="math inline">\(\mathbf{\omega}=\nabla\times\mathbf{u}\)</span>和<span
class="math inline">\(\int_{\Omega}\nabla\times\mathbf{\omega}\cdot
\nabla q=\int_{\partial
\Omega}\mathbf{n}\times\mathbf{\omega}\cdot\nabla q\)</span>.
为了简化计算，则<span
class="math inline">\(\mathbf{n}\times\mathbf{\omega}^{n+1}=\mathbf{n}\times\mathbf{\bar{\omega}}^{n+1}|_{\partial
\Omega}\)</span>, 其中<span
class="math inline">\(\mathbf{\bar{\omega}}^{n+1}=\nabla\times\mathbf{u}^{n}\)</span>,
显示表示。从而上式可表示 <span class="math display">\[
\int_{\Omega}\nabla p^{n+1}\cdot\nabla
q=\int_{\Omega}S(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\cdot\nabla
q-\mu\int_{\partial\Omega}\mathbf{n}\times\nabla\times\mathbf{u}^{n}\cdot\nabla
q-\frac{\rho}{\Delta t}\int_{\Omega}\mathbf{n}\cdot\mathbf{w}^{n+1}q\\
\int_{\Omega}p^{n+1}=0
\]</span> 上式可求解<span class="math inline">\(p^{n+1}\)</span>.</p>
<p>如何求解<span class="math inline">\(p^{n+1}\)</span></p>
<p>1）对于<span class="math inline">\(p^{n+1}_{1}\)</span>: <span
class="math display">\[
\int_{\Omega}\nabla p_{1}^{n+1}\cdot\nabla
q=-\mu\int_{\partial\Omega}\mathbf{n}\times\nabla\times\mathbf{u}^{n}\cdot\nabla
q-\frac{\rho}{\Delta t}\int_{\Omega}\mathbf{n}\cdot\mathbf{w}^{n+1}q\\
\int_{\Omega}p_{1}^{n+1}=0
\]</span> 1）对于<span class="math inline">\(p^{n+1}_{2}\)</span>: <span
class="math display">\[
\int_{\Omega}\nabla p_{2}^{n+1}\cdot\nabla
q=\int_{\Omega}(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n})\cdot\nabla q\\
\int_{\Omega}p_{2}^{n+1}=0
\]</span> 很容易验证<span
class="math inline">\(p^{n+1}=p_{1}^{n+1}+Sp_{2}^{n+1}\)</span></p>
<p>利用<span
class="math inline">\(p^{n+1}=p_{1}^{n+1}+Sp_{2}^{n+1}\)</span>，则
<span class="math display">\[
\frac{\rho}{\mu\Delta
t}\mathbf{u}^{n+1}-\Delta\mathbf{u^{n+1}}=\frac{S}{\mu}(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}-\nabla p^{n+1}_{2})+(\frac{\rho}{\mu\Delta
t}\mathbf{u}^{n}-\frac{1}{\mu}\nabla p_{1}^{n+1})\\
\]</span> 令<span
class="math inline">\(\phi\)</span>是任意测试函数，且<span
class="math inline">\(\phi|_{\Omega}=0\)</span>,对上述关于<span
class="math inline">\(\phi\)</span>做<span
class="math inline">\(L^{2}\)</span>内积， <span class="math display">\[
\frac{\rho}{\mu\Delta
t}\int_{\Omega}\mathbf{u}^{n+1}\phi+\int_{\Omega}\nabla\phi\cdot\nabla\mathbf{u^{n+1}}=\frac{S}{\mu}\int_{\Omega}(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}-\nabla
p^{n+1}_{2})\phi+\int_{\Omega}(\frac{\rho}{\mu\Delta
t}\mathbf{u}^{n}-\frac{1}{\mu}\nabla p_{1}^{n+1})\phi
\]</span> 上式可求<span
class="math inline">\(\mathbf{u}^{n+1}\)</span></p>
<p>如何求解<span class="math inline">\(\mathbf{u}^{n+1}\)</span></p>
<p>1）对于<span class="math inline">\(\mathbf{u}^{n+1}_{1}\)</span>:
<span class="math display">\[
\frac{\rho}{\mu\Delta
t}\int_{\Omega}\mathbf{u}_{1}^{n+1}\phi+\int_{\Omega}\nabla\phi\cdot\nabla\mathbf{u}_{1}^{n+1}=\int_{\Omega}(\frac{\rho}{\mu\Delta
t}\mathbf{u}^{n}-\frac{1}{\mu}\nabla p_{1}^{n+1})\phi\\
\mathbf{u}_{1}^{n+1}=\mathbf{w}^{n+1}
\]</span> 1）对于<span
class="math inline">\(\mathbf{u}^{n+1}_{2}\)</span>: <span
class="math display">\[
\frac{\rho}{\mu\Delta
t}\int_{\Omega}\mathbf{u}_{2}^{n+1}\phi+\int_{\Omega}\nabla\phi\cdot\nabla\mathbf{u}_{2}^{n+1}=\frac{1}{\mu}\int_{\Omega}(f^{n}-\rho\mathbf{u}^{n}\cdot\nabla
\mathbf{u}^{n}-\nabla p^{n+1}_{2})\phi\\
\mathbf{u}_{1}^{n+1}=0
\]</span> 很容易验证<span
class="math inline">\(\mathbf{u}^{n+1}=\mathbf{u}_{1}^{n+1}+S\mathbf{u}_{2}^{n+1}\)</span>
<span class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})=-\mu\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{w}^{n+1}-\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p^{n+1}\\
-\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}
\]</span> 上述方程两边同时乘以<span
class="math inline">\(\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\)</span>则
<span class="math display">\[
2q^{n+1}(\frac{q^{n+1}-q^{n}}{\Delta
t})\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}=-\mu\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{\Omega}|\nabla\mathbf{u}^{n+1}|^{2}+\mu\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}^{n+1})\cdot\mathbf{w}^{n+1}-\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p^{n+1}\\
-\frac{q^{n+1}}{\sqrt{E(\bar{t})+\delta}}\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}\\
\]</span> 则 <span class="math display">\[
\frac{2}{\Delta t}S^{3}(E(\bar{t})+\delta)-\frac{2 q^{n}}{\Delta
t}S^{2}\sqrt{E(\bar{t})+\delta}+A_{1}S+A_{2}S^{2}+A_{3}S^{3}=0\\
A_{1}=
\mu\int_{\Omega}|\nabla\mathbf{u}_{1}^{n+1}|^{2}-\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}_{1}^{n+1})\cdot\mathbf{w}^{n+1}+\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p_{1}^{n+1}+\frac{\rho}{2}\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})|\mathbf{w}^{n+1}|^{2}\\
A_{2}=2\mu\int_{\Omega}\nabla \mathbf{u}^{n+1}_{1}:\nabla
\mathbf{u}^{n+1}_{2}-\mu\int_{\partial\Omega}(\mathbf{n}\cdot\nabla\mathbf{u}_{2}^{n+1})\cdot\mathbf{w}^{n+1}+\int_{\partial\Omega}(\mathbf{n}\cdot\mathbf{w}^{n+1})p_{2}^{n+1}
\\
A_{3}=\mu\int_{\Omega}|\nabla\mathbf{u}_{2}^{n+1}|^{2}
\]</span></p>
]]></content>
  </entry>
</search>
